{"version":3,"file":"chatbot.min.js","sources":["src/config.js","src/logger.js","chatbot.js","src/index.js"],"sourcesContent":["// Centralized access to localized WP config\r\nexport const Config = {\r\n  get raw() {\r\n    return (typeof window !== 'undefined' && window.DualChatbotConfig) ? window.DualChatbotConfig : {};\r\n  },\r\n  get restUrl() {\r\n    return String(this.raw.restUrl || '');\r\n  },\r\n  get analyticsRestUrl() {\r\n    return String(this.raw.analyticsRestUrl || '');\r\n  },\r\n  get logRestUrl() {\r\n    return String(this.raw.logRestUrl || '');\r\n  },\r\n  get nonce() {\r\n    return String(this.raw.nonce || '');\r\n  },\r\n  get debugEnabled() {\r\n    return !!this.raw.debugEnabled;\r\n  },\r\n  get maxMessageLength() {\r\n    return Number(this.raw.maxMessageLength || 2000);\r\n  }\r\n};\r\n\r\n","import { Config } from './config.js';\r\n\r\nconst BUCKET = { tokens: 5, last: Date.now() };\r\nfunction allow() {\r\n  const now = Date.now();\r\n  const dt = (now - BUCKET.last) / 1000;\r\n  BUCKET.last = now;\r\n  BUCKET.tokens = Math.min(5, BUCKET.tokens + dt * 2);\r\n  if (BUCKET.tokens >= 1) { BUCKET.tokens -= 1; return true; }\r\n  return false;\r\n}\r\n\r\nexport async function clientLog(level, message, meta = {}) {\r\n  if (!Config.debugEnabled || !Config.logRestUrl) return;\r\n  if (!allow()) return;\r\n  try {\r\n    const payload = { level: String(level||'info'), message: String(message||''), url: String(location && location.href || ''), ...meta };\r\n    await fetch(Config.logRestUrl, { method: 'POST', headers: { 'Content-Type':'application/json', 'X-WP-Nonce': Config.nonce }, body: JSON.stringify(payload) });\r\n  } catch(_e) {}\r\n}\r\n\r\nexport const logger = {\r\n  debug: (...a) => { if (Config.debugEnabled) { try { console.debug(...a); } catch(_e){} } },\r\n  info:  (...a) => { if (Config.debugEnabled) { try { console.info(...a); } catch(_e){} } },\r\n  warn:  (...a) => { if (Config.debugEnabled) { try { console.warn(...a); } catch(_e){} } },\r\n  error: (...a) => { try { console.error(...a); } catch(_e){}; try { clientLog('error', a && a[0] ? String(a[0]) : 'error', { stack: (a && a[1] && a[1].stack) ? String(a[1].stack) : '' }); } catch(_e){} },\r\n};\r\n\r\n// Global capture when debug on\r\nexport function attachGlobalErrorHandlers() {\r\n  if (!Config.debugEnabled) return;\r\n  try {\r\n    window.addEventListener('error', function(e){\r\n      try { clientLog('error', e && e.message ? e.message : 'window.onerror', { stack: e && e.error && e.error.stack ? String(e.error.stack) : '', line: e && e.lineno ? Number(e.lineno) : 0, col: e && e.colno ? Number(e.colno) : 0 }); } catch(_){ }\r\n    });\r\n    window.addEventListener('unhandledrejection', function(e){\r\n      try {\r\n        const msg = (e && e.reason) ? (typeof e.reason === 'string' ? e.reason : (e.reason && e.reason.message ? e.reason.message : 'unhandledrejection')) : 'unhandledrejection';\r\n        const stk = (e && e.reason && e.reason.stack) ? String(e.reason.stack) : '';\r\n        clientLog('error', msg, { stack: stk });\r\n      } catch(_){ }\r\n    });\r\n  } catch(_){ }\r\n}\r\n\r\n// Expose for debugging\r\nif (typeof window !== 'undefined') {\r\n  window.DCB = window.DCB || {};\r\n  window.DCB.logger = logger;\r\n  window.DCB.clientLog = clientLog;\r\n}\r\n\r\n","/* global DualChatbotConfig */\r\n// Frontend script for the Dual Chatbot Plugin.\r\n\r\n(function(){\r\n  // Prevent duplicate initialization if the script is injected twice\r\n  if (window.__DualChatbotInitialized) {\r\n    try { console.warn('Dual Chatbot already initialized; skipping duplicate init'); } catch(_) {}\r\n    return;\r\n  }\r\n  window.__DualChatbotInitialized = true;\r\n  // Small helper: is an element actually visible on screen?\r\n  function _isVisible(el){\r\n    try {\r\n      if (!el) return false;\r\n      const s = getComputedStyle(el);\r\n      if (s.display === 'none' || s.visibility === 'hidden' || Number(s.opacity) === 0) return false;\r\n      const rect = el.getBoundingClientRect();\r\n      return (rect.width > 0 && rect.height > 0);\r\n    } catch(_e) { return false; }\r\n  }\r\n  // Does the element intersect with the current viewport?\r\n  function _isInViewport(el){\r\n    try {\r\n      if (!el) return false;\r\n      const rect = el.getBoundingClientRect();\r\n      const vw = (window.innerWidth || document.documentElement.clientWidth || 0);\r\n      const vh = (window.innerHeight || document.documentElement.clientHeight || 0);\r\n      if (!rect || rect.width <= 0 || rect.height <= 0) return false;\r\n      return (rect.bottom > 0 && rect.right > 0 && rect.top < vh && rect.left < vw);\r\n    } catch(_) { return false; }\r\n  }\r\n  // Is pointer-events disabled on the element or any ancestor?\r\n  function _hasPointerEventsNone(el){\r\n    try {\r\n      let n = el;\r\n      while (n && n.nodeType === 1) {\r\n        const pe = getComputedStyle(n).pointerEvents;\r\n        if (pe === 'none') return true;\r\n        n = n.parentElement;\r\n      }\r\n    } catch(_){}\r\n    return false;\r\n  }\r\n  // Is the element covered by another element (basic heuristic using elementFromPoint at center)?\r\n  function _isCoveredByOverlay(el){\r\n    try {\r\n      const rect = el.getBoundingClientRect();\r\n      if (!rect || rect.width <= 0 || rect.height <= 0) return true;\r\n      const cx = rect.left + rect.width / 2;\r\n      const cy = rect.top + rect.height / 2;\r\n      // If center is outside viewport, treat as covered/not interactable\r\n      const vw = (window.innerWidth || document.documentElement.clientWidth || 0);\r\n      const vh = (window.innerHeight || document.documentElement.clientHeight || 0);\r\n      if (cx < 0 || cy < 0 || cx > vw || cy > vh) return true;\r\n      const topEl = document.elementFromPoint(cx, cy);\r\n      if (!topEl) return true;\r\n      return !(topEl === el || el.contains(topEl));\r\n    } catch(_) { return true; }\r\n  }\r\n  // Combined check: element is visible, in viewport and can be interacted with\r\n  // Note: isElementInteractable function removed as it was unused\r\n  \r\n  // Robust usability check with comprehensive viewport, visibility and interaction validation\r\n  function isTrulyUsable(el) {\r\n    try {\r\n      if (!el || !el.nodeType) return false;\r\n      \r\n      // Check if element intersects with viewport (BoundingClientRect)\r\n      const rect = el.getBoundingClientRect();\r\n      if (!rect || rect.width <= 0 || rect.height <= 0) return false;\r\n      \r\n      const vw = window.innerWidth || document.documentElement.clientWidth || 0;\r\n      const vh = window.innerHeight || document.documentElement.clientHeight || 0;\r\n      \r\n      // Element must have some intersection with viewport\r\n      if (rect.bottom <= 0 || rect.right <= 0 || rect.top >= vh || rect.left >= vw) return false;\r\n      \r\n      // Check visibility and clickability (display/visibility/opacity, pointer-events)\r\n      const style = getComputedStyle(el);\r\n      if (style.display === 'none' || style.visibility === 'hidden') return false;\r\n      if (Number(style.opacity) === 0) return false;\r\n      \r\n      // Check pointer-events on element and ancestors\r\n      let node = el;\r\n      while (node && node.nodeType === 1) {\r\n        const nodeStyle = getComputedStyle(node);\r\n        if (nodeStyle.pointerEvents === 'none') return false;\r\n        node = node.parentElement;\r\n      }\r\n      \r\n      // Check if disabled\r\n      if (el.hasAttribute && (el.hasAttribute('disabled') || el.getAttribute('aria-disabled') === 'true')) {\r\n        return false;\r\n      }\r\n      \r\n      // Optional: elementFromPoint heuristic to detect overlay coverage\r\n      const cx = rect.left + rect.width / 2;\r\n      const cy = rect.top + rect.height / 2;\r\n      \r\n      // If center point is outside viewport, consider unusable\r\n      if (cx < 0 || cy < 0 || cx >= vw || cy >= vh) return false;\r\n      \r\n      const topElement = document.elementFromPoint(cx, cy);\r\n      if (!topElement) return false;\r\n      \r\n      // Element is covered by overlay if center point hits a different element\r\n      if (topElement !== el && !el.contains(topElement)) return false;\r\n      \r\n      return true;\r\n    } catch(_) {\r\n      return false;\r\n    }\r\n  }\r\n  function makeSessionId(){\r\n    try { if (window.crypto && crypto.randomUUID) return crypto.randomUUID(); } catch(e){}\r\n    const s4=()=>Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\r\n    return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n  }\r\n  function wpFetch(url, opts = {}) {\r\n    opts.headers = opts.headers || {};\r\n    opts.headers['X-WP-Nonce'] = DualChatbotConfig.nonce;\r\n    return fetch(url, opts);\r\n  }\r\n  async function safeFetch(url, opts = {}, _meta = { tries: 0, tried429: false }) {\r\n    const sleep = (ms) => new Promise(r => setTimeout(r, ms));\r\n    const countdown = async (secs) => {\r\n      try {\r\n        const end = Date.now() + Math.min(30000, (secs||0)*1000);\r\n        const id = setInterval(() => {\r\n          const left = Math.max(0, end - Date.now());\r\n          const s = Math.ceil(left/1000);\r\n          if (window.DCB && typeof window.DCB.showToast === 'function') {\r\n            window.DCB.showToast(`Zu viele Anfragen. Warte ${s}s…`);\r\n          }\r\n          if (left <= 0) clearInterval(id);\r\n        }, 1000);\r\n      } catch(_){}\r\n    };\r\n    try {\r\n      opts.headers = opts.headers || {};\r\n      if (!('X-WP-Nonce' in opts.headers)) {\r\n        opts.headers['X-WP-Nonce'] = DualChatbotConfig.nonce;\r\n      }\r\n      const res = await fetch(url, opts);\r\n      const text = await res.text();\r\n      let data;\r\n      try { data = JSON.parse(text); }\r\n      catch {\r\n        try { console.error('Non-JSON from REST:', text); } catch(_){ }\r\n        const e = new Error('REST_ERROR_GENERIC');\r\n        e.status = res.status;\r\n        throw e;\r\n      }\r\n      if (!res.ok) {\r\n        const status = res.status;\r\n        const code = (data && (data.code || (data.data && data.data.status))) || status;\r\n        const msg = (data && data.message) ? data.message : 'REST Fehler';\r\n        const err = new Error(`${status}:${msg}`);\r\n        err.status = status;\r\n        err.code = code;\r\n        // Retry on 5xx up to 3 times with backoff\r\n        if (status >= 500 && status < 600 && _meta.tries < 3) {\r\n          const backoff = Math.min(1200, 300 * Math.pow(2, _meta.tries));\r\n          await sleep(backoff);\r\n          return safeFetch(url, opts, { tries: _meta.tries + 1, tried429: _meta.tried429 });\r\n        }\r\n        // Retry once on 429 after retry_after hint\r\n        if (status === 429 && !_meta.tried429) {\r\n          let ra = 0;\r\n          try { ra = Number((data && data.retry_after) ? data.retry_after : 0); } catch(_){ ra = 0; }\r\n          if (!Number.isFinite(ra) || ra <= 0) { ra = 3; }\r\n          countdown(ra);\r\n          await sleep(Math.min(ra * 1000, 30000));\r\n          return safeFetch(url, opts, { tries: _meta.tries, tried429: true });\r\n        }\r\n        throw err;\r\n      }\r\n      return data;\r\n    } catch (err) { throw err; }\r\n  }\r\n  if (typeof window !== 'undefined') { window.DCB = window.DCB || {}; window.DCB.safeFetch = safeFetch; }\r\n  // ===== Logging helpers =====\r\n  const debugEnabled = !!(window.DualChatbotConfig && DualChatbotConfig.debugEnabled);\r\n  const logEndpoint = (window.DualChatbotConfig && DualChatbotConfig.logRestUrl) ? String(DualChatbotConfig.logRestUrl) : '';\r\n  const MAX_MSG_LEN = (window.DualChatbotConfig && Number(DualChatbotConfig.maxMessageLength)) ? Number(DualChatbotConfig.maxMessageLength) : 2000;\r\n\r\n  function clampText(t) {\r\n    try {\r\n      let s = (t == null) ? '' : String(t);\r\n      s = s.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, '');\r\n      s = s.trim();\r\n      if (!s) return '';\r\n      if (s.length > MAX_MSG_LEN) s = s.slice(0, MAX_MSG_LEN);\r\n      return s;\r\n    } catch(_){ return ''; }\r\n  }\r\n\r\n  // simple throttle to avoid log floods\r\n  const __logBucket = { tokens: 5, last: Date.now() };\r\n  function allowLog(){\r\n    const now = Date.now();\r\n    const dt = (now - __logBucket.last) / 1000;\r\n    __logBucket.last = now;\r\n    __logBucket.tokens = Math.min(5, __logBucket.tokens + dt * 2);\r\n    if (__logBucket.tokens >= 1) { __logBucket.tokens -= 1; return true; }\r\n    return false;\r\n  }\r\n  async function clientLog(level, message, meta){\r\n    try{\r\n      if (!debugEnabled || !logEndpoint) return;\r\n      if (!allowLog()) return;\r\n      const payload = Object.assign({\r\n        level: String(level||'info'),\r\n        message: String(message||''),\r\n        url: String(location && location.href || ''),\r\n      }, meta || {});\r\n      await wpFetch(logEndpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n    } catch(_e){}\r\n  }\r\n  // Logger functionality moved inline to reduce unused variable warnings\r\n\r\n  // Global error capture (only when debug is enabled)\r\n  if (debugEnabled) {\r\n    try {\r\n      window.addEventListener('error', function(e){\r\n        try { clientLog('error', e && e.message ? e.message : 'window.onerror', { stack: e && e.error && e.error.stack ? String(e.error.stack) : '', line: e && e.lineno ? Number(e.lineno) : 0, col: e && e.colno ? Number(e.colno) : 0, url: String(location && location.href || '') }); } catch(_){ }\r\n      });\r\n      window.addEventListener('unhandledrejection', function(e){\r\n        try {\r\n          const msg = (e && e.reason) ? (typeof e.reason === 'string' ? e.reason : (e.reason && e.reason.message ? e.reason.message : 'unhandledrejection')) : 'unhandledrejection';\r\n          const stk = (e && e.reason && e.reason.stack) ? String(e.reason.stack) : '';\r\n          clientLog('error', msg, { stack: stk });\r\n        } catch(_){ }\r\n      });\r\n    } catch(_){ }\r\n  }\r\n  // ===== Analytics helpers (privacy-friendly) =====\r\n  const analyticsEnabled = !!(window.DualChatbotConfig && DualChatbotConfig.analyticsEnabled);\r\n  const analyticsBase = (window.DualChatbotConfig && DualChatbotConfig.analyticsRestUrl) ? String(DualChatbotConfig.analyticsRestUrl).replace(/\\/$/, '') : '';\r\n  \r\n  // Debug analytics configuration\r\n  if (debugEnabled) {\r\n    try {\r\n      console.log('[ANALYTICS INIT] Analytics configuration:');\r\n      console.log('[ANALYTICS INIT] - DualChatbotConfig:', window.DualChatbotConfig);\r\n      console.log('[ANALYTICS INIT] - analyticsEnabled:', analyticsEnabled);\r\n      console.log('[ANALYTICS INIT] - analyticsBase:', analyticsBase);\r\n    } catch(_) {}\r\n  }\r\n  function getCookie(name){\r\n    try{ const m = document.cookie.match(new RegExp('(?:^|; )'+name.replace(/([.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g,'\\\\$1')+'=([^;]*)')); return m ? decodeURIComponent(m[1]) : ''; }catch(_){ return ''; }\r\n  }\r\n  function setCookie(name, value, days){\r\n    try{\r\n      const d = new Date(); d.setTime(d.getTime() + (days*24*60*60*1000));\r\n      document.cookie = `${name}=${encodeURIComponent(value)}; expires=${d.toUTCString()}; path=/; SameSite=Lax`;\r\n    }catch(_){}\r\n  }\r\n  function ensureClientId(){\r\n    let cid = getCookie('dual_chatbot_cid');\r\n    if(!cid){ cid = (window.crypto && crypto.randomUUID) ? crypto.randomUUID() : (Date.now().toString(16)+Math.random().toString(16).slice(2,10)); setCookie('dual_chatbot_cid', cid, 365); }\r\n    return cid;\r\n  }\r\n  const analyticsState = { clientId: ensureClientId(), startedFor: {}, inactivityTimer: null, lastActivityAt: 0 };\r\n  function trackEvent(type, payload){\r\n    try{\r\n      if (debugEnabled) {\r\n        try {\r\n          console.log('[ANALYTICS DEBUG] trackEvent called:', type, payload);\r\n          console.log('[ANALYTICS DEBUG] analyticsEnabled:', analyticsEnabled);\r\n          console.log('[ANALYTICS DEBUG] analyticsBase:', analyticsBase);\r\n        } catch(_){}\r\n      }\r\n      \r\n      if(!analyticsEnabled || !analyticsBase) {\r\n        if (debugEnabled) { try { console.log('[ANALYTICS DEBUG] Analytics disabled or no base URL - skipping'); } catch(_){} }\r\n        return Promise.resolve();\r\n      }\r\n      \r\n      const body = Object.assign({ type }, payload||{});\r\n      if (debugEnabled) { try { console.log('[ANALYTICS DEBUG] Sending analytics event:', body); } catch(_){} }\r\n      \r\n      return fetch(`${analyticsBase}/analytics/track`, {\r\n        method:'POST',\r\n        headers: { 'Content-Type':'application/json','X-WP-Nonce': (DualChatbotConfig && DualChatbotConfig.nonce) ? DualChatbotConfig.nonce : '' },\r\n        body: JSON.stringify(body)\r\n      }).then(response => {\r\n        if (debugEnabled) { try { console.log('[ANALYTICS DEBUG] Analytics response status:', response.status); } catch(_){} }\r\n        if (!response.ok) {\r\n          return response.text().then(text => {\r\n            if (debugEnabled) { try { console.error('[ANALYTICS DEBUG] Analytics error response:', text); } catch(_){} }\r\n            try {\r\n              const errorData = JSON.parse(text);\r\n              if (debugEnabled) { try { console.error('[ANALYTICS DEBUG] Parsed error:', errorData); } catch(_){} }\r\n            } catch(_e) {\r\n              if (debugEnabled) { try { console.error('[ANALYTICS DEBUG] Could not parse error response as JSON'); } catch(_){} }\r\n            }\r\n            throw new Error(`HTTP ${response.status}: ${text}`);\r\n          });\r\n        }\r\n        return response.json().then(data => {\r\n          if (debugEnabled) { try { console.log('[ANALYTICS DEBUG] Success response:', data); } catch(_){} }\r\n          return data;\r\n        });\r\n      }).catch(error => {\r\n        if (debugEnabled) { try { console.error('[ANALYTICS DEBUG] Analytics error:', error); } catch(_){} }\r\n      });\r\n    }catch(e){ \r\n      if (debugEnabled) { try { console.error('[ANALYTICS DEBUG] Exception in trackEvent:', e); } catch(_){} }\r\n      return Promise.resolve(); \r\n    }\r\n  }\r\n  function ensureSessionStart(sessionId){\r\n    console.log('[ANALYTICS DEBUG] ensureSessionStart called with sessionId:', sessionId);\r\n    if(!sessionId) {\r\n      console.log('[ANALYTICS DEBUG] No session ID provided');\r\n      return;\r\n    }\r\n    if(analyticsState.startedFor[sessionId]) {\r\n      console.log('[ANALYTICS DEBUG] Session already started for:', sessionId);\r\n      return;\r\n    }\r\n    console.log('[ANALYTICS DEBUG] Starting new session:', sessionId);\r\n    analyticsState.startedFor[sessionId] = true;\r\n    trackEvent('session_start', { session_id: sessionId, client_id: analyticsState.clientId, ts: String(Date.now()) });\r\n  }\r\n  function scheduleInactivityEnd(getSession){\r\n    try{ if(analyticsState.inactivityTimer) { clearTimeout(analyticsState.inactivityTimer); analyticsState.inactivityTimer = null; } }catch(_){}\r\n    analyticsState.lastActivityAt = Date.now();\r\n    analyticsState.inactivityTimer = setTimeout(() => {\r\n      try{\r\n        const sid = (typeof getSession === 'function') ? getSession() : null;\r\n        if (sid) { trackEvent('session_end', { session_id: sid, client_id: analyticsState.clientId, ts: String(Date.now()) }); }\r\n      }catch(_){}\r\n    }, 30*60*1000); // 30 minutes\r\n  }\r\n  function showChatbotTrigger(){\r\n    try {\r\n      const wrapper = window.chatbotWrapper || document.getElementById('dual-chatbot-widget') || document.querySelector('#dual-chatbot-widget');\r\n      if (wrapper) {\r\n        // Remove inline/display-based hiding and common hidden classes\r\n        wrapper.hidden = false;\r\n        wrapper.style.removeProperty('display');\r\n        wrapper.style.removeProperty('visibility');\r\n        wrapper.classList.remove('hidden','is-hidden','d-none');\r\n        // Fallback: force a visible display if still none\r\n        if (getComputedStyle(wrapper).display === 'none') {\r\n          wrapper.style.display = 'block';\r\n        }\r\n\r\n        const btn = wrapper.querySelector('#open-chatbot');\r\n        if (btn) {\r\n          btn.hidden = false;\r\n          btn.style.removeProperty('display');\r\n          btn.style.removeProperty('visibility');\r\n          btn.classList.remove('hidden','is-hidden','d-none');\r\n          if (getComputedStyle(btn).display === 'none') {\r\n            btn.style.display = 'inline-flex';\r\n          }\n        // Keep a reference for later\r\n        window.chatbotWrapper = wrapper;\r\n      }\n\n      }\n\n      // Also ensure our own floating icon (if present) is visible\n      const icon = document.querySelector('.dual-chatbot-icon');\r\n      if (icon) {\r\n        icon.hidden = false;\r\n        icon.style.removeProperty('display');\r\n        icon.classList.remove('hidden','is-hidden','d-none');\r\n        // Ensure visibility even if CSS hides it on mobile\r\n        try { if (getComputedStyle(icon).display === 'none') { icon.style.display = 'inline-flex'; } } catch(_){ icon.style.display = 'inline-flex'; }\r\n      }\r\n    } catch (e) {\r\n      // no-op: visibility best-effort only\r\n    }\r\n  }\r\n  if (!window.DualChatbotConfig || (!DualChatbotConfig.faqEnabled && !DualChatbotConfig.advisorEnabled)) {\r\n    console.warn('Kein Chatbot-Modus aktiviert!');\r\n    // Trotzdem versuchen wir, einen evtl. vorhandenen Theme-Button sichtbar zu machen\r\n    try { document.addEventListener('DOMContentLoaded', showChatbotTrigger); } catch(_) {}\r\n    return;\r\n  }\r\n  // Advisor features are only active for logged-in members\r\n  const advisorMode = !!(DualChatbotConfig.advisorEnabled && DualChatbotConfig.isLoggedIn);\r\n  const faqMode = !!DualChatbotConfig.faqEnabled;\r\n  const restBase = DualChatbotConfig.restUrl.replace(/\\/$/, '');\r\n  // Central width check for responsive behavior (feature detection, not UA)\r\n  const smallMql = window.matchMedia('(max-width: 800px)');\r\n  const isSmallScreen = () => smallMql.matches;\r\n  let currentSession = null;\r\n  let firstBotChunkAtByClientMsg = Object.create(null);\r\n  let userMsgStartAtByClientMsg = Object.create(null);\r\n  let advisorMinimized = false;\r\n  let searchTimeoutId = null;\r\n  // Prevent race conditions when loading history (e.g., double click)\r\n  let historyLoadSeq = 0;\r\n  let advisorFullscreenEl = null;\r\n  function createElement(tag, classNames = '', children = [], id = null) {\r\n    const el = document.createElement(tag);\r\n    if (classNames) el.className = classNames;\r\n    children.forEach(child => {\r\n      if (typeof child === 'string') el.appendChild(document.createTextNode(child));\r\n      else if (child instanceof Node) el.appendChild(child);\r\n    });\r\n    if (id) el.id = id;\r\n    return el;\r\n  }\r\n\r\n  // Accessible typing indicator (three-dot wave)\r\n  function createTypingIndicator() {\r\n    const msg = createElement('div', 'dual-chatbot-message dual-chatbot-bot dual-chatbot-typing is-typing');\r\n    const wrap = createElement('div', 'dual-typing');\r\n    wrap.setAttribute('role', 'status');\r\n    wrap.setAttribute('aria-live', 'polite');\r\n    wrap.setAttribute('aria-label', 'Tippt …');\r\n    wrap.appendChild(createElement('span', 'dual-typing-dot'));\r\n    wrap.appendChild(createElement('span', 'dual-typing-dot'));\r\n    wrap.appendChild(createElement('span', 'dual-typing-dot'));\r\n    msg.appendChild(wrap);\r\n    return msg;\r\n  }\r\n  function removeTypingIndicators(containerEl) {\r\n    try { containerEl.querySelectorAll('.dual-chatbot-typing').forEach(n => n.remove()); } catch(_) {}\r\n  }\r\n  function showGreetingOnce(containerEl, mode) {\r\n    try {\r\n      const key = (mode === 'members' || mode === 'advisor') ? 'members' : 'faq';\r\n      const storageKey = 'dual_chatbot_greeted_' + key;\r\n      \r\n      // Debug logging\r\n      console.log('[GREETING DEBUG] Mode:', mode, 'Key:', key, 'StorageKey:', storageKey);\r\n      console.log('[GREETING DEBUG] Already greeted?', sessionStorage.getItem(storageKey));\r\n      console.log('[GREETING DEBUG] Container element:', containerEl);\r\n      console.log('[GREETING DEBUG] DualChatbotConfig:', window.DualChatbotConfig);\r\n      \r\n      // ÄNDERUNG: Kommentieren Sie die nächsten 4 Zeilen aus, um Begrüßung bei jedem Öffnen zu zeigen\r\n      // if (sessionStorage.getItem(storageKey) === '1') {\r\n      //   console.log('[GREETING DEBUG] Already greeted this session, skipping');\r\n      //   return;\r\n      // }\r\n      \r\n      // Only show when chat is empty to avoid duplicates\r\n      const hasMsgs = !!containerEl.querySelector('.dual-chatbot-message');\r\n      console.log('[GREETING DEBUG] Has existing messages?', hasMsgs);\r\n      if (hasMsgs) {\r\n        console.log('[GREETING DEBUG] Chat already has messages, skipping greeting');\r\n        return;\r\n      }\r\n      \r\n      // Insert typing indicator first\r\n      removeTypingIndicators(containerEl);\r\n      const indicator = createTypingIndicator();\r\n      containerEl.appendChild(indicator);\r\n      containerEl.scrollTop = containerEl.scrollHeight;\r\n      console.log('[GREETING DEBUG] Typing indicator added, waiting 900ms...');\r\n      \r\n      const delay = 900;\r\n      setTimeout(() => {\r\n        // Remove indicator and append greeting based on mode\r\n        removeTypingIndicators(containerEl);\r\n        const text = (key === 'members')\r\n          ? (window.DualChatbotConfig && DualChatbotConfig.greetingMembers ? String(DualChatbotConfig.greetingMembers) : '')\r\n          : (window.DualChatbotConfig && DualChatbotConfig.greetingFaq ? String(DualChatbotConfig.greetingFaq) : '');\r\n        \r\n        console.log('[GREETING DEBUG] Greeting text for', key + ':', text);\r\n        \r\n        if (text && text.trim()) {\r\n          console.log('[GREETING DEBUG] Displaying greeting message');\r\n          try {\r\n            if (typeof appendMessageToContainer === 'function') {\r\n              appendMessageToContainer(containerEl, 'bot', text);\r\n            } else {\r\n              // Fallback: directly append a bot message\r\n              const msgEl = createElement('div', 'dual-chatbot-message dual-chatbot-bot');\r\n              const content = createElement('div', 'dual-chatbot-message-content');\r\n              if (typeof setMessageContent === 'function') { setMessageContent(content, text); }\r\n              else { content.textContent = text; }\r\n              msgEl.appendChild(content);\r\n              containerEl.appendChild(msgEl);\r\n            }\r\n            try { normalizeActionBars(containerEl); } catch(_){}\r\n            containerEl.scrollTop = containerEl.scrollHeight;\r\n          } catch(e) { \r\n            console.error('[GREETING DEBUG] Error displaying greeting:', e);\r\n          }\r\n          try { \r\n            sessionStorage.setItem(storageKey, '1'); \r\n            console.log('[GREETING DEBUG] Marked as greeted in session storage');\r\n          } catch(e) {\r\n            console.error('[GREETING DEBUG] Error setting session storage:', e);\r\n          }\r\n        } else {\r\n          console.log('[GREETING DEBUG] No greeting text configured or text is empty');\r\n        }\r\n        // if no greeting text, do not set greeted flag\r\n      }, delay);\r\n    } catch(e) {\r\n      console.error('[GREETING DEBUG] Error in showGreetingOnce:', e);\r\n    }\r\n  }\r\n  \r\n  // Debug-Funktion für Begrüßungsnachrichten (temporär)\r\n  window.debugChatbotGreeting = function() {\r\n    console.log('=== CHATBOT GREETING DEBUG ===');\r\n    console.log('DualChatbotConfig:', window.DualChatbotConfig);\r\n    console.log('FAQ Greeting:', window.DualChatbotConfig?.greetingFaq);\r\n    console.log('Members Greeting:', window.DualChatbotConfig?.greetingMembers);\r\n    console.log('FAQ Mode enabled:', window.DualChatbotConfig?.faqEnabled);\r\n    console.log('Advisor Mode enabled:', window.DualChatbotConfig?.advisorEnabled);\r\n    \r\n    // Session Storage Status\r\n    console.log('Session Storage:');\r\n    console.log('- FAQ greeted:', sessionStorage.getItem('dual_chatbot_greeted_faq'));\r\n    console.log('- Members greeted:', sessionStorage.getItem('dual_chatbot_greeted_members'));\r\n    \r\n    // Container Elements\r\n    console.log('Chat containers found:');\r\n    const faqArea = document.querySelector('.dual-chatbot-chat-area');\r\n    const advisorArea = document.querySelector('.dual-chatbot-main-chat');\r\n    console.log('- FAQ area:', faqArea);\r\n    console.log('- Advisor area:', advisorArea);\r\n    \r\n    if (faqArea) {\r\n      console.log('- FAQ area has messages:', !!faqArea.querySelector('.dual-chatbot-message'));\r\n    }\r\n    if (advisorArea) {\r\n      console.log('- Advisor area has messages:', !!advisorArea.querySelector('.dual-chatbot-message'));\r\n    }\r\n    \r\n    // Reset session storage\r\n    console.log('Resetting session storage...');\r\n    sessionStorage.removeItem('dual_chatbot_greeted_faq');\r\n    sessionStorage.removeItem('dual_chatbot_greeted_members');\r\n    \r\n    // Force greeting if container is available\r\n    if (faqArea && window.DualChatbotConfig?.faqEnabled) {\r\n      console.log('Forcing FAQ greeting...');\r\n      showGreetingOnce(faqArea, 'faq');\r\n    }\r\n    if (advisorArea && window.DualChatbotConfig?.advisorEnabled) {\r\n      console.log('Forcing Members greeting...');\r\n      showGreetingOnce(advisorArea, 'members');\r\n    }\r\n  };\r\n\r\n  // Safe content renderer used by streaming; ensures it's always defined\r\n  if (typeof setMessageContent !== 'function') {\r\n    var setMessageContent = function(el, text) {\r\n      try {\r\n        const isContent = el && el.classList && el.classList.contains('dual-chatbot-message-content');\r\n        if (isContent) {\r\n          el.innerHTML = '';\r\n          // Render plain text first (parser may replace later)\r\n          el.textContent = text || '';\r\n          return;\r\n        }\r\n        // Wrap into content container when not provided\r\n        el.innerHTML = '';\r\n        const content = document.createElement('div');\r\n        content.className = 'dual-chatbot-message-content';\r\n        content.textContent = text || '';\r\n        el.appendChild(content);\r\n      } catch (e) {\r\n        try { el.textContent = text || ''; } catch(_) {}\r\n      }\r\n    };\r\n  }\r\n\r\n  // Note: buildMsgActions is defined later in this file. Avoid fallback stubs to prevent double bars.\r\n  function createHeader(title, { className = 'dual-chatbot-header', controlsLeft = false } = {}) {\r\n    const header = createElement('div', className);\r\n    const titleEl = createElement('span', 'dual-chatbot-header-title', [title]);\r\n    const controls = createElement('div', 'dual-chatbot-controls');\r\n    const closeBtn = createElement('button', 'dual-chatbot-close');\r\n    closeBtn.type = 'button';\r\n    closeBtn.setAttribute('aria-label', 'Fenster schließen');\r\n    controls.appendChild(closeBtn);\r\n    if (controlsLeft) {\r\n      header.appendChild(controls);\r\n      header.appendChild(titleEl);\r\n    } else {\r\n      header.appendChild(titleEl);\r\n      header.appendChild(controls);\r\n    }\r\n    return { header, titleEl, closeBtn };\r\n  }\r\n\r\n  // Append a message into the FAQ popup chat-area (left/right alignment via CSS)\r\n  function appendMessage(sender, text) {\r\n    try {\r\n      const chatArea = document.querySelector('.dual-chatbot-chat-area');\r\n      if (!chatArea) return;\r\n      const msg = createElement('div', `dual-chatbot-message dual-chatbot-${sender}`);\r\n      msg.textContent = text;\r\n      chatArea.appendChild(msg);\r\n      chatArea.scrollTop = chatArea.scrollHeight;\r\n    } catch (e) {\r\n      // no-op\r\n    }\r\n  }\r\n\r\n  // Nachricht senden (Advisor ODER FAQ)\r\n  async function sendMessage(text, containerEl) {\r\n    let safe = clampText(text);\r\n    if (!safe) return;\r\n    if (!advisorMode) {\r\n      appendMessage('user', safe);\r\n    }\r\n    // Show typing indicator while waiting for response\r\n    let target = containerEl\r\n      || document.querySelector('.dual-chatbot-chat-area')\r\n      || document.querySelector('.dual-chatbot-main-chat')\r\n      || null;\r\n    let typingEl = null;\r\n    try {\r\n      if (target) {\r\n        removeTypingIndicators(target);\r\n        typingEl = createTypingIndicator();\r\n        target.appendChild(typingEl);\r\n        target.scrollTop = target.scrollHeight;\r\n      }\r\n    } catch(_) {}\r\n    const payload = {\r\n      message: safe,\r\n      context: advisorMode ? 'advisor' : 'faq',\r\n    };\r\n    if (currentSession) payload.session_id = currentSession;\r\n    // Analytics: generate a client message id and mark start time\r\n    const clientMsgId = (window.crypto && crypto.randomUUID) ? crypto.randomUUID() : (Date.now().toString(16)+Math.random().toString(16).slice(2,10));\r\n    userMsgStartAtByClientMsg[clientMsgId] = Date.now();\r\n    scheduleInactivityEnd(() => currentSession);\r\n    try {\r\n      const data = await safeFetch(`${restBase}/submit_message`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      currentSession = data.session_id;\r\n      // Analytics\r\n      ensureSessionStart(currentSession);\r\n      const userTs = userMsgStartAtByClientMsg[clientMsgId] || Date.now();\r\n      const botTs = Date.now();\r\n      trackEvent('message_user', { session_id: currentSession, client_id: analyticsState.clientId, msg_id: clientMsgId, ts: String(userTs) });\r\n      trackEvent('message_bot', { session_id: currentSession, client_id: analyticsState.clientId, reply_to: clientMsgId, kb_hit: !advisorMode, latency_ms: Math.max(0, botTs - userTs), ts: String(botTs) });\r\n      scheduleInactivityEnd(() => currentSession);\r\n      try { if (typingEl && typingEl.remove) typingEl.remove(); } catch(_) {}\r\n      if (advisorMode && containerEl) {\r\n        const msg = createElement('div', 'dual-chatbot-message dual-chatbot-bot');\r\n        msg.textContent = data.response;\r\n        containerEl.appendChild(msg);\r\n        containerEl.scrollTop = containerEl.scrollHeight;\r\n      } else {\r\n        appendMessage('bot', data.response);\r\n      }\r\n    } catch (err) {\r\n      try {\r\n        if (err && (err.status === 429)) {\r\n          if (window.DCB && typeof window.DCB.showToast === 'function') window.DCB.showToast('Zu viele Anfragen. Bitte kurz warten.');\r\n          else console.warn('Zu viele Anfragen. Bitte kurz warten.');\r\n        } else if (err && (err.status === 403)) {\r\n          if (window.DCB && typeof window.DCB.showToast === 'function') window.DCB.showToast('Keine Schreibrechte (nur SOLO/TEAMS).');\r\n          else console.warn('Keine Schreibrechte (nur SOLO/TEAMS).');\r\n        }\r\n      } catch(_){ }\r\n      try { if (typingEl && typingEl.remove) typingEl.remove(); } catch(_) {}\r\n      if (advisorMode && containerEl) {\r\n        const msg = createElement('div', 'dual-chatbot-message dual-chatbot-bot');\r\n        msg.textContent = err.message;\r\n        containerEl.appendChild(msg);\r\n      } else {\r\n        appendMessage('bot', err.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  function scrollChatToBottom() {\r\n    const chatArea = document.querySelector('.dual-chatbot-chat-area');\r\n    if (chatArea) chatArea.scrollTop = chatArea.scrollHeight;\r\n  }\r\n\r\n\r\n// Nachricht mit Extras (z.B. Websuche im Advisor)\r\nasync function sendMessageWithExtras(text, containerEl, webSearch, options = {}) {\r\n    const replacingExistingBot = !!(options && options.replaceBotEl);\r\n    let safe = clampText(text);\r\n    if (!safe) return;\r\n    const payload = { message: safe, context: 'advisor' };\r\n    // Ensure a single session id from the very beginning (avoids duplicates)\r\n    if (!currentSession) currentSession = makeSessionId();\r\n    let streamSessionId = currentSession;\r\n    payload.session_id = currentSession;\r\n    // Generate idempotency id for this user message\r\n    const clientMsgId = (options && options.clientMsgId)\r\n      ? options.clientMsgId\r\n      : ((window.crypto && crypto.randomUUID) ? crypto.randomUUID() : (Date.now().toString(16)+Math.random().toString(16).slice(2,10)));\r\n    payload.client_msg_id = clientMsgId;\r\n    // Analytics: record user message start and ensure session\r\n    userMsgStartAtByClientMsg[clientMsgId] = Date.now();\r\n    ensureSessionStart(currentSession);\r\n    scheduleInactivityEnd(() => currentSession);\r\n    if (webSearch) payload.web_search = true;\r\n\r\n    // Bot element handling: create placeholder unless replacing an existing bot message\r\n    const replaceBotEl = options && options.replaceBotEl ? options.replaceBotEl : null;\r\n    const replaceBotId = options && options.replaceBotId ? options.replaceBotId : null;\r\n    if (replaceBotId || replaceBotEl) {\r\n      // Prevent creating a new user row in history when regenerating\r\n      payload.no_user_insert = true;\r\n      payload.target_bot_id = replaceBotId || 0;\r\n    }\r\n    // Also allow callers to force no user insert (e.g. editing a user message without an existing bot reply)\r\n    if (options && options.noUserInsert) {\r\n      payload.no_user_insert = true;\r\n    }\r\n    let botEl, contentEl;\r\n    let typingEl = null; // separate typing message when not replacing\r\n    let inlineTypingEl = null; // inline dots when replacing existing bot\r\n    let botAppended = false;\r\n    if (replaceBotEl) {\r\n      botEl = replaceBotEl;\r\n      botEl.classList.add('is-typing');\r\n      contentEl = botEl.querySelector('.dual-chatbot-message-content');\r\n      if (!contentEl) { contentEl = createElement('div','dual-chatbot-message-content'); botEl.innerHTML=''; botEl.appendChild(contentEl); }\r\n      contentEl.innerHTML = '';\r\n      // Inline typing dots inside existing bot message\r\n      inlineTypingEl = createElement('div','dual-typing');\r\n      inlineTypingEl.setAttribute('role','status');\r\n      inlineTypingEl.setAttribute('aria-live','polite');\r\n      inlineTypingEl.setAttribute('aria-label','Tippt …');\r\n      inlineTypingEl.appendChild(createElement('span','dual-typing-dot'));\r\n      inlineTypingEl.appendChild(createElement('span','dual-typing-dot'));\r\n      inlineTypingEl.appendChild(createElement('span','dual-typing-dot'));\r\n      botEl.appendChild(inlineTypingEl);\r\n    } else {\r\n      if (replacingExistingBot) { return; } // niemals extra Bot unten anhängen\r\n      botEl = createElement('div', 'dual-chatbot-message dual-chatbot-bot is-typing');\r\n      contentEl = createElement('div','dual-chatbot-message-content');\r\n      botEl.appendChild(contentEl);\r\n      // Show separate typing indicator until first content arrives\r\n      try {\r\n        removeTypingIndicators(containerEl);\r\n        typingEl = createTypingIndicator();\r\n        containerEl.appendChild(typingEl);\r\n        containerEl.scrollTop = containerEl.scrollHeight;\r\n      } catch(_) {}\r\n    }\r\n    const nearBottom = () => (containerEl.scrollTop + containerEl.clientHeight >= containerEl.scrollHeight - 40);\r\n    const scrollIfNeeded = () => { if (nearBottom()) containerEl.scrollTop = containerEl.scrollHeight; };\r\n    const ensureBotAppended = () => {\r\n      try {\r\n        if (inlineTypingEl && inlineTypingEl.remove) { inlineTypingEl.remove(); inlineTypingEl = null; }\r\n        if (!replaceBotEl && !botAppended) {\r\n          if (typingEl && typingEl.remove) { typingEl.remove(); typingEl = null; }\r\n          containerEl.appendChild(botEl);\r\n          botAppended = true;\r\n        }\r\n      } catch(_) {}\r\n      scrollIfNeeded();\r\n    };\r\n\r\n    // Letter-by-letter typewriter similar to ChatGPT\r\n    let full = '';\r\n    let pending = '';\r\n    let typeTimer = null;\r\n    let sawDone = false;\r\n    const cps = 60; // characters per second (faster)\r\n    const typeInterval = Math.max(10, Math.floor(1000 / cps));\r\n    let finalized = false;\r\n    const finalizeNow = async () => {\r\n      if (finalized) return; finalized = true;\r\n      if (typeTimer) { clearInterval(typeTimer); typeTimer = null; }\r\n      if (pending && pending.length) { full += pending; pending = ''; }\r\n      botEl.classList.remove('is-typing');\r\n      const holder = botEl.querySelector('.dual-chatbot-message-content') || botEl;\r\n      setMessageContent(holder, full);\r\n      // Build immediately and ensure presence with re-checks\r\n        const ensureActions = () => {\r\n          try {\r\n            const bar = botEl.querySelector('.dual-msg-actions');\r\n            if (!bar) { normalizeActionBars(containerEl || botEl.parentElement); return; }\r\n            // If bar exists but has no buttons yet (fallback or race), rebuild\r\n            if (!bar.querySelector('.dual-msg-btn')) {\r\n              bar.remove();\r\n              normalizeActionBars(containerEl || botEl.parentElement);\r\n            }\r\n          } catch(_) {}\r\n        };\r\n      ensureActions();\r\n        requestAnimationFrame(() => { ensureActions(); scrollIfNeeded(); });\r\n        setTimeout(() => { ensureActions(); scrollIfNeeded(); }, 120);\r\n        setTimeout(() => { ensureActions(); scrollIfNeeded(); }, 400);\r\n        setTimeout(() => { ensureActions(); scrollIfNeeded(); }, 800);\r\n      actionsAdded = true;\r\n      try {\r\n        if (replaceBotId) {\r\n          await wpFetch(`${restBase}/edit_bot_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: replaceBotId, session_id: streamSessionId || currentSession, content: full })});\r\n        } else {\r\n          await wpFetch(`${restBase}/append_history`, {\r\n            method:'POST', headers:{ 'Content-Type':'application/json' },\r\n            body: JSON.stringify({ session_id: streamSessionId || currentSession, sender:'bot', context:'advisor', message: full, reply_to_client_msg_id: clientMsgId })\r\n          });\r\n        }\r\n      } catch(_){}\r\n      // After persisting, if we replaced an existing bot answer, ensure there is\r\n      // only one bot message between this and the next user message.\r\n      try {\r\n        if (replaceBotEl || replaceBotId) {\r\n          const container = containerEl || botEl.parentElement;\r\n          const removeIfExtra = async (node) => {\r\n            if (!node || node === botEl) return;\r\n            if (node.classList && node.classList.contains('dual-chatbot-bot')) {\r\n              const rid = node.dataset && node.dataset.id ? Number(node.dataset.id) : null;\r\n              try { if (rid) { await wpFetch(`${restBase}/delete_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: rid, session_id: streamSessionId || currentSession })}); } } catch(_e){}\r\n              try { node.remove(); } catch(_e){}\r\n            }\r\n          };\r\n          // forward cleanup until next user\r\n          let n = botEl.nextElementSibling;\r\n          while (n && !n.classList.contains('dual-chatbot-user')) { const cur=n; n=n.nextElementSibling; await removeIfExtra(cur); }\r\n          // backward cleanup until previous user\r\n          let p = botEl.previousElementSibling;\r\n          while (p && !p.classList.contains('dual-chatbot-user')) { const cur=p; p=p.previousElementSibling; await removeIfExtra(cur); }\r\n          try { normalizeActionBars(container); } catch(_e){}\r\n        }\r\n      } catch(_e){}\r\n    };\r\n    const finishIfComplete = () => {\r\n      if (sawDone && pending.length === 0 && !typeTimer) { finalizeNow(); }\r\n    };\r\n    const typeTick = () => {\r\n      if (!pending.length) { clearInterval(typeTimer); typeTimer = null; finishIfComplete(); return; }\r\n      const ch = pending[0];\r\n      pending = pending.slice(1);\r\n      full += ch;\r\n      const holder = botEl.querySelector('.dual-chatbot-message-content') || botEl;\r\n      holder.textContent = full;\r\n      scrollIfNeeded();\r\n    };\r\n    let actionsAdded = false;\r\n    const startTypewriter = () => { if (typeTimer) return; typeTimer = setInterval(typeTick, typeInterval); };\r\n    const enqueueText = (t) => { if (!t) return; pending += t; startTypewriter(); };\r\n    // Append deltas verbatim to preserve exact spacing/characters\r\n    const enqueueDelta = (d) => {\r\n      if (!d) return;\r\n      enqueueText(d);\r\n    };\r\n\r\n    // Try streaming first\r\n    try {\r\n      const controller = new AbortController();\r\n      const resp = await fetch(`${restBase}/stream_message`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'X-WP-Nonce': DualChatbotConfig.nonce },\r\n        body: JSON.stringify(payload),\r\n        signal: controller.signal\r\n      });\r\n      if (!resp.ok || !resp.body) throw new Error('Streaming nicht verfügbar');\r\n      const reader = resp.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let buffer = '';\r\n      let gotAnyChunk = false;\r\n      let watchdog = setTimeout(() => { try { if (!gotAnyChunk) controller.abort(); } catch(_){} }, 25000);\r\n      while (true) {\r\n        const { value, done } = await reader.read();\r\n        if (done) break;\r\n        buffer += decoder.decode(value, { stream: true });\r\n        let idx;\r\n        while ((idx = buffer.indexOf('\\n')) >= 0) {\r\n          // Keep whitespace inside payloads; only drop trailing CR\r\n          let line = buffer.slice(0, idx);\r\n          buffer = buffer.slice(idx + 1);\r\n          if (line.endsWith('\\r')) line = line.slice(0, -1);\r\n          if (!line) continue;\r\n          // Try NDJSON first (our backend)\r\n          try {\r\n            const obj = JSON.parse(line);\r\n            if (obj.type === 'meta' && obj.session_id) { currentSession = obj.session_id; streamSessionId = obj.session_id; try { ensureSessionStart(currentSession); } catch(_){} }\r\n            if (obj.type === 'delta' && obj.content) {\r\n              const d = String(obj.content);\r\n              if (d && d.length > 0) {\r\n                gotAnyChunk = true;\r\n                if (!firstBotChunkAtByClientMsg[clientMsgId]) { firstBotChunkAtByClientMsg[clientMsgId] = Date.now(); }\r\n                ensureBotAppended();\r\n                enqueueDelta(d);\r\n                if(!actionsAdded){ buildMsgActions(botEl,'bot',null,''); actionsAdded=true; }\r\n              }\r\n            }\r\n            if (obj.type === 'error') {\r\n              botEl.textContent = obj.message || 'Fehler beim Streamen.';\r\n            }\r\n            if (obj.type === 'done') { sawDone = true; finalizeNow(); }\r\n            continue;\r\n          } catch(_) {\r\n            // Maybe raw SSE from OpenAI proxied through (lines starting with 'data:')\r\n            if (line.startsWith('data:')) {\r\n              // Do not trim end: payload may be a JSON with whitespace tokens\r\n              const payload = line.slice(5).replace(/^\\s+/, '');\r\n              if (payload === '[DONE]') { sawDone = true; finalizeNow(); continue; }\r\n              try {\r\n                const j = JSON.parse(payload);\r\n                const d = (((j || {}).choices || [])[0] || {}).delta || {};\r\n                if (typeof d.content === 'string' && d.content) {\r\n                  const s = d.content;\r\n                  gotAnyChunk = true;\r\n                  if (!firstBotChunkAtByClientMsg[clientMsgId]) { firstBotChunkAtByClientMsg[clientMsgId] = Date.now(); }\r\n                  ensureBotAppended();\r\n                  enqueueDelta(s);\r\n                  if(!actionsAdded){ buildMsgActions(botEl,'bot',null,''); actionsAdded=true; }\r\n                }\r\n              } catch(__) { /* ignore malformed chunks */ }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      clearTimeout(watchdog);\r\n      // ensure scrolled at the end if user was following\r\n      scrollIfNeeded();\r\n      finishIfComplete();\r\n      if (full) {\r\n        ensureBotAppended();\r\n        // ensure any remaining buffered characters are included\r\n        if (typeTimer) { clearInterval(typeTimer); typeTimer = null; }\r\n        if (pending && pending.length) { full += pending; pending = ''; }\r\n        const holder = botEl.querySelector('.dual-chatbot-message-content') || botEl;\r\n        setMessageContent(holder, full);\r\n        // Remove typing indicator and rebuild actions to ensure single bar sits beneath final content\r\n        botEl.classList.remove('is-typing');\r\n        buildMsgActions(botEl, 'bot', replaceBotId || null, full);\r\n        // Persist edited or new bot message\r\n        try {\r\n          if (replaceBotId) {\r\n            await wpFetch(`${restBase}/edit_bot_message`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ id: replaceBotId, session_id: streamSessionId || currentSession, content: full })\r\n            });\r\n          } else {\r\n            await wpFetch(`${restBase}/append_history`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ session_id: streamSessionId || currentSession, sender: 'bot', context: 'advisor', message: full, reply_to_client_msg_id: clientMsgId })\r\n            });\r\n          }\r\n        } catch(_){}\r\n        // Analytics for advisor stream: user and bot metrics (kb_hit=false)\r\n        try {\r\n          const userTs = userMsgStartAtByClientMsg[clientMsgId] || Date.now();\r\n          const botFirstTs = firstBotChunkAtByClientMsg[clientMsgId] || Date.now();\r\n          trackEvent('message_user', { session_id: currentSession, client_id: analyticsState.clientId, msg_id: clientMsgId, ts: String(userTs) });\r\n          trackEvent('message_bot', { session_id: currentSession, client_id: analyticsState.clientId, reply_to: clientMsgId, kb_hit: false, latency_ms: Math.max(0, botFirstTs - userTs), ts: String(botFirstTs) });\r\n          scheduleInactivityEnd(() => currentSession);\r\n        } catch(_){}\r\n          try { normalizeActionBars(containerEl || botEl.parentElement); } catch(_){}\r\n      }\r\n    } catch (err) {\r\n      // Fallback: non-streaming â€“ replace, do not append\r\n      try {\r\n        const data = await safeFetch(`${restBase}/submit_message`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload)\r\n        });\r\n        currentSession = data.session_id;\r\n        streamSessionId = data.session_id;\r\n        // stop any typewriter and render once\r\n        if (typeTimer) { clearInterval(typeTimer); typeTimer = null; }\r\n        pending = '';\r\n        full = data.response || '';\r\n        ensureBotAppended();\r\n        const holder = botEl.querySelector('.dual-chatbot-message-content') || botEl;\r\n        setMessageContent(holder, full);\r\n        if(!actionsAdded){ buildMsgActions(botEl,'bot',replaceBotId || null,full); actionsAdded=true; }\r\n        try {\r\n          if (replaceBotId) {\r\n            await wpFetch(`${restBase}/edit_bot_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: replaceBotId, session_id: streamSessionId || currentSession, content: full })});\r\n          }\r\n        } catch(_){}\r\n        // Analytics fallback (non-streaming path)\r\n        try {\r\n          const userTs = userMsgStartAtByClientMsg[clientMsgId] || Date.now();\r\n          const botTs = Date.now();\r\n          ensureSessionStart(currentSession);\r\n          trackEvent('message_user', { session_id: currentSession, client_id: analyticsState.clientId, msg_id: clientMsgId, ts: String(userTs) });\r\n          trackEvent('message_bot', { session_id: currentSession, client_id: analyticsState.clientId, reply_to: clientMsgId, kb_hit: false, latency_ms: Math.max(0, botTs - userTs), ts: String(botTs) });\r\n          scheduleInactivityEnd(() => currentSession);\r\n        } catch(_){}\r\n          try { normalizeActionBars(containerEl || botEl.parentElement); } catch(_){}\r\n        sawDone = true; finishIfComplete();\r\n      } catch (e2) {\r\n        ensureBotAppended();\r\n        botEl.classList.remove('is-typing');\r\n        botEl.textContent = e2.message || 'Fehler';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Initialisiere das richtige Widget je nach Modus\r\nfunction initChatWidget(openDirect = false) {\r\n  console.log('initChatWidget() wurde aufgerufen');\r\n  // Avoid building twice (e.g., multiple event hooks)\r\n  if (window.__DualChatbotWidgetMounted) {\r\n    try { console.debug('Chat widget already mounted; skipping'); } catch(_) {}\r\n    return;\r\n  }\r\n  // Do not force open on small screens; allow bubble icon on mobile too\r\n  if (advisorMode) {\r\n      buildAdvisorWidget(openDirect);\r\n      return;\r\n    }\r\n    if (faqMode) {\r\n      buildFaqWidget(openDirect);\r\n      return;\r\n    }\r\n    console.warn('Kein Chatbot-Modus aktiviert!');\r\n  }\r\n\r\n  // FAQ Widget\r\n  function buildFaqWidget(openDirect = false) {    \r\n    const uiStart = (performance && performance.now) ? performance.now() : 0;\r\n    let container = document.getElementById('dual-chatbot-container');\r\n    if (container) {\r\n      container.classList.add('dual-chatbot-container');\r\n      container.innerHTML = '';\r\n      // Force visible in case theme hid it\r\n      container.hidden = false;\r\n      container.style.removeProperty('display');\r\n      container.style.removeProperty('visibility');\r\n      container.classList.remove('hidden','is-hidden','d-none');\r\n    } else {\r\n      container = createElement('div', 'dual-chatbot-container', [], 'dual-chatbot-container');\r\n    }\r\n    document.body.appendChild(container);\r\n\r\n    let icon = null;\r\n    if (!openDirect) {\r\n      icon = createElement('button', 'dual-chatbot-icon');\r\n      icon.setAttribute('title', 'Chat');\r\n      // ensure icon is visible (override theme/viewport CSS)\r\n      icon.hidden = false;\r\n      icon.style.removeProperty('display');\r\n      icon.style.removeProperty('visibility');\r\n      icon.classList.remove('hidden','is-hidden','d-none');\r\n      // If CSS hides it (e.g., mobile rules), force inline-flex\r\n      try { if (getComputedStyle(icon).display === 'none') { icon.style.display = 'inline-flex'; } } catch(_){ icon.style.display = 'inline-flex'; }\r\n      container.appendChild(icon);\r\n    }\r\n\r\n    let open = openDirect;\r\n    const popup = createElement('div', 'dual-chatbot-popup');\r\n    popup.style.display = 'none';\r\n    const { header, closeBtn } = createHeader((window.DualChatbotConfig && DualChatbotConfig.faqHeaderTitle) ? DualChatbotConfig.faqHeaderTitle : 'FAQ');\r\n    try { closeBtn.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.labelClose) ? DualChatbotConfig.labelClose : 'Close'); } catch(_) {}\r\n    closeBtn.addEventListener('click', () => {\r\n      // End session for FAQ on close\r\n      if (currentSession) { try { trackEvent('session_end', { session_id: currentSession, client_id: analyticsState.clientId, ts: String(Date.now()) }); } catch(_){} }\r\n      open = false;\r\n      popup.style.display = 'none';\r\n      // Reset fullscreen styles if they were applied\r\n      popup.style.removeProperty('position');\r\n      popup.style.removeProperty('top');\r\n      popup.style.removeProperty('left');\r\n      popup.style.removeProperty('right');\r\n      popup.style.removeProperty('bottom');\r\n      popup.style.removeProperty('width');\r\n      popup.style.removeProperty('height');\r\n      popup.style.removeProperty('border-radius');\r\n      popup.style.removeProperty('z-index');\r\n      document.documentElement.classList.remove('dual-chatbot-modal-open');\r\n      document.body.classList.remove('dual-chatbot-modal-open');\r\n      if (icon) {\r\n        icon.style.display = '';\r\n      } else {\r\n        container.remove();\r\n      }\r\n      showChatbotTrigger();\r\n      window.widgetOpened = false;\r\n    });\r\n\r\n    // --- Chat-Area + Footer (Fixierung) ---\r\n    const chatArea = createElement('div', 'dual-chatbot-chat-area');\r\n    try { chatArea.setAttribute('role','log'); chatArea.setAttribute('aria-live','polite'); chatArea.setAttribute('aria-relevant','additions'); chatArea.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.ariaChatLog) ? DualChatbotConfig.ariaChatLog : 'Chat log'); } catch(_) {}\r\n    const footer = createElement('div', 'dual-chatbot-footer');\r\n    footer.style.position = 'sticky';\r\n    footer.style.bottom = '0';\r\n    footer.style.background = 'inherit';\r\n    footer.style.zIndex = '10';\r\n      const input = createElement('textarea', 'dual-chatbot-input');\r\n      input.setAttribute('rows', 1);\r\n    if (window.DualChatbotConfig && DualChatbotConfig.inputPlaceholder) {\r\n      input.placeholder = DualChatbotConfig.inputPlaceholder;\r\n    }\r\n    input.placeholder = 'Nachricht…';\r\n    const sendBtn = createElement('button', 'dual-chatbot-send');\r\n    try { sendBtn.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.labelSend) ? DualChatbotConfig.labelSend : 'Send'); } catch(_) {}\r\n    const sendIconMask = createElement('span', 'dual-chatbot-icon-mask');\r\n    sendBtn.appendChild(sendIconMask);\r\n    sendBtn.type = 'button';\r\n    try { sendBtn.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.labelSend) ? DualChatbotConfig.labelSend : 'Send'); } catch(_) {}\r\n\r\n    // Wrap input + send in a single row so width can be centered like ChatGPT\r\n    const inputRow = createElement('div', 'dual-chatbot-input-wrapper');\r\n    inputRow.appendChild(input);\r\n    inputRow.appendChild(sendBtn);\r\n    footer.appendChild(inputRow);\r\n\r\n      // Enter to send (FAQ input); Shift+Enter for newline\r\n      input.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n          e.preventDefault();\r\n          // avoid double send while already sending\r\n          if (!sendBtn.dataset.sending) {\r\n            sendBtn.click();\r\n          }\r\n        }\r\n      });\r\n      // Auto-resize up to ~220px then scroll internally\r\n      (function(){\r\n        const ta = input;\r\n        const baseH = 44;\r\n        const maxH  = 220; // match CSS\r\n        const fit = () => {\r\n          try {\r\n            ta.style.height = baseH + 'px';\r\n            const h = Math.min(ta.scrollHeight, maxH);\r\n            ta.style.height = h + 'px';\r\n            ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden';\r\n          } catch(_e){}\r\n        };\r\n        ['input','change'].forEach(ev => ta.addEventListener(ev, fit));\r\n        requestAnimationFrame(fit);\r\n      })();\r\n\r\n      const triggerPress = () => {\r\n        sendBtn.classList.add('is-sending');\r\n        setTimeout(() => {\r\n          if (!sendBtn.dataset.sending) sendBtn.classList.remove('is-sending');\r\n        }, 120);\r\n      };\r\n      sendBtn.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') triggerPress();\r\n      });\r\n      sendBtn.addEventListener('mousedown', triggerPress);\r\n\r\n      // Aufbau\r\n      popup.appendChild(header);\r\n      popup.appendChild(chatArea);\r\n      popup.appendChild(footer);\r\n      container.appendChild(popup);\r\n\r\n      if (openDirect) {\r\n        popup.style.display = 'flex';\r\n        // show greeting once per session\r\n        showGreetingOnce(chatArea, 'faq');\r\n      }\r\n\r\n      if (icon) {\r\n        icon.addEventListener('click', () => {\r\n          // On small screens, force fullscreen for FAQ as well\r\n          if (isSmallScreen()) {\r\n            popup.style.display = 'flex';\r\n            popup.style.position = 'fixed';\r\n            popup.style.top = '0';\r\n            popup.style.left = '0';\r\n            popup.style.right = '0';\r\n            popup.style.bottom = '0';\r\n            popup.style.width = '100vw';\r\n            popup.style.height = '100vh';\r\n            popup.style.borderRadius = '0';\r\n            popup.style.zIndex = '999999';\r\n            icon.style.display = 'none';\r\n            document.documentElement.classList.add('dual-chatbot-modal-open');\r\n            document.body.classList.add('dual-chatbot-modal-open');\r\n            showGreetingOnce(chatArea, 'faq');\r\n          } else {\r\n            open = !open;\r\n            popup.style.display = open ? 'flex' : 'none';\r\n            icon.style.display = open ? 'none' : '';\r\n        if (open) { showGreetingOnce(chatArea, 'faq'); try { input && input.focus(); } catch(_){} }\r\n      }\r\n    });\r\n      }\r\n\r\n      sendBtn.addEventListener('click', async () => {\r\n        const text = input.value.trim();\r\n        if (!text) return;\r\n        input.value = '';\r\n        // ensure any auto-grow/resize listeners update\r\n        input.dispatchEvent(new Event('input'));\r\n        try {\r\n          sendBtn.classList.add('is-sending');\r\n          sendBtn.dataset.sending = 'true';\r\n          await sendMessage(text);\r\n        } catch (err) {\r\n          console.error(err);\r\n      } finally {\r\n        delete sendBtn.dataset.sending;\r\n        sendBtn.classList.remove('is-sending');\r\n        try { input && input.focus(); } catch(_) {}\r\n      }\r\n    });\r\n\r\n      // Perf: widget build time\r\n      try {\r\n        if (uiStart) {\r\n          const ms = Math.round((performance.now() - uiStart));\r\n          trackEvent('perf_ui', { session_id: currentSession || 'ui', latency_ms: ms, ts: String(Date.now()) });\r\n        }\r\n      } catch(_){}\r\n  }\r\n\r\n  // Advisor Widget\r\n  function buildAdvisorWidget(openDirect = false) {\r\n    const uiStart = (performance && performance.now) ? performance.now() : 0;\r\n    let container = document.getElementById('dual-chatbot-container');\r\n    if (container) {\r\n      container.classList.add('dual-chatbot-container');\r\n      container.innerHTML = '';\r\n      // Force visible in case theme hid it\r\n      container.hidden = false;\r\n      container.style.removeProperty('display');\r\n      container.style.removeProperty('visibility');\r\n      container.classList.remove('hidden','is-hidden','d-none');\r\n    } else {\r\n      container = createElement('div', 'dual-chatbot-container', [], 'dual-chatbot-container');\r\n    }\r\n    document.body.appendChild(container);\r\n    if (!openDirect) {\r\n      const icon = createElement('button', 'dual-chatbot-icon');\r\n      icon.setAttribute('title', 'Chat');\r\n      if (window.DualChatbotConfig && DualChatbotConfig.bubbleIconUrl) {\r\n        icon.style.backgroundImage = 'url(' + DualChatbotConfig.bubbleIconUrl + ')';\r\n        icon.style.backgroundRepeat = 'no-repeat';\r\n        icon.style.backgroundPosition = 'center';\r\n        icon.style.backgroundSize = 'contain';\r\n      }\r\n      // Ensure icon visible regardless of theme CSS\r\n      icon.hidden = false;\r\n      icon.style.removeProperty('display');\r\n      icon.style.removeProperty('visibility');\r\n      icon.classList.remove('hidden','is-hidden','d-none');\r\n      // Force visible if CSS hides on mobile\r\n      try { if (getComputedStyle(icon).display === 'none') { icon.style.display = 'inline-flex'; } } catch(_){ icon.style.display = 'inline-flex'; }\r\n      container.appendChild(icon);\r\n      icon.addEventListener('click', () => {\r\n        if (advisorMinimized && advisorFullscreenEl) {\r\n          advisorFullscreenEl.style.display = 'flex';\r\n          advisorMinimized = false;\r\n        } else {\r\n          initAdvisorView();\r\n        }\r\n      });\r\n    } else {\r\n      initAdvisorView();\r\n    }\r\n  }\r\n\r\n  // Vollbild-Advisor-View\r\n  async function initAdvisorView() {\r\n    const existing = document.querySelector('.dual-chatbot-fullscreen');\r\n    if (existing) existing.remove();\r\n    const fs = createElement('div', 'dual-chatbot-fullscreen');\n    advisorFullscreenEl = fs;\n\n    // External handle to open the sidebar (lives on fs, outside the sidebar)\n    const openHandle = createElement('button', 'dual-chatbot-sidebar-handle');\n    openHandle.type = 'button';\n    try { openHandle.setAttribute('aria-label', 'Sidebar öffnen'); } catch(_) {}\n    openHandle.addEventListener('click', () => setSidebar(true));\n    fs.appendChild(openHandle);\n\r\n    // Sidebar mit Profil, Suche, neue Chats, Liste\r\n    const sidebar = createElement('div', 'dual-chatbot-sidebar');\r\n    sidebar.id = 'dcb-sidebar';\r\n    // Backdrop for mobile slide-over; visibility controlled via CSS on minimized state\r\n    const backdrop = createElement('div', 'dual-chatbot-backdrop');\r\n    if (DualChatbotConfig.profileUrl) {\r\n      const profileLink = document.createElement('a');\r\n      profileLink.className = 'dual-chatbot-profile';\r\n      profileLink.href = DualChatbotConfig.profileUrl;\r\n      profileLink.rel = 'noopener noreferrer';\r\n      const label = DualChatbotConfig.userName && DualChatbotConfig.userName.trim() !== ''\r\n        ? DualChatbotConfig.userName\r\n        : (DualChatbotConfig.isLoggedIn ? 'Profil' : 'Anmelden');\r\n      if (DualChatbotConfig.userAvatar) {\r\n        const avatar = createElement('img');\r\n        avatar.src = DualChatbotConfig.userAvatar;\r\n        avatar.alt = label;\r\n        profileLink.appendChild(avatar);\r\n      }\r\n      const nameSpan = createElement('span', '', [label]);\r\n      profileLink.appendChild(nameSpan);\r\n      sidebar.appendChild(profileLink);\r\n    }\r\n    const sbHeader = createElement('div', 'dual-chatbot-sidebar-header');\r\n    const sbTitle  = createElement('span', 'dual-chatbot-sidebar-title', ['Unterhaltungen']);\r\n    // Sidebar collapse/expand toggle\r\n    const sidebarToggle = createElement('button', 'dual-chatbot-sidebar-toggle');\r\n    sidebarToggle.type = 'button';\r\n    sidebarToggle.setAttribute('aria-label', 'Sidebar schließen');\r\n    sidebarToggle.setAttribute('aria-expanded', 'true');\r\n    sidebarToggle.setAttribute('aria-controls', 'dcb-sidebar');\r\n    const sidebarToggleIcon = createElement('span', 'dual-chatbot-sidebar-toggle-icon');\r\n    sidebarToggleIcon.setAttribute('aria-hidden', 'true');\r\n    sidebarToggle.innerHTML = '';\r\n    sidebarToggle.appendChild(sidebarToggleIcon);\r\n    // Use CSS mask for toggle icon\r\n    try { sidebarToggleIcon.innerHTML = ''; } catch(_) {}\r\n    const sidebarToggleMask = createElement('span', 'dual-chatbot-icon-mask');\r\n    sidebarToggleMask.setAttribute('aria-hidden', 'true');\r\n    sidebarToggleIcon.appendChild(sidebarToggleMask);\r\n    // Ensure no legacy toggle remains inside the sidebar header\r\n    try {\r\n      const legacy = sbHeader.querySelector('.dual-chatbot-sidebar-toggle');\r\n      if (legacy && legacy !== sidebarToggle) { legacy.remove(); }\r\n    } catch(_) {}\r\n    // Title and toggle: append exactly once to the sidebar header\r\n    sbHeader.appendChild(sbTitle);\r\n    sbHeader.appendChild(sidebarToggle);\r\n    const searchWrapper = createElement('div', 'dual-chatbot-search-wrapper');\n    const searchInput = createElement('input', 'dual-chatbot-search');\r\n    searchInput.type = 'text';\r\n    searchInput.placeholder = 'Suchen…';\r\n    const newChatBtn = createElement('button', 'dual-chatbot-new-chat-btn', ['+ Neuer Chat']);\r\n    const list = createElement('ul', 'dual-chatbot-sidebar-list');\r\n    searchWrapper.appendChild(searchInput);\r\n    // removed decorative search icon\r\n\r\n    sidebar.appendChild(sbHeader);\r\n    // On small screens, start minimized so chat has priority\r\n    if (isSmallScreen()) {\r\n      try {\r\n        fs.classList.add('dual-chatbot-minimized');\r\n        sidebarToggle.setAttribute('aria-expanded', 'false');\r\n        sidebarToggle.setAttribute('aria-label', 'Sidebar öffnen');\r\n        advisorMinimized = true;\r\n      } catch(_) {}\r\n    }\r\n    sidebar.appendChild(searchWrapper);\r\n    sidebar.appendChild(newChatBtn);\r\n    sidebar.appendChild(list);\r\n\r\n    // Main Chat Area\r\n    const main = createElement('div', 'dual-chatbot-main');\r\n    const mainChat = createElement('div', 'dual-chatbot-main-chat');\r\n    try { mainChat.setAttribute('role','log'); mainChat.setAttribute('aria-live','polite'); mainChat.setAttribute('aria-relevant','additions'); mainChat.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.ariaChatLog) ? DualChatbotConfig.ariaChatLog : 'Chat log'); } catch(_) {}\r\n    const mainFooter = createElement('div', 'dual-chatbot-main-footer');\r\n    const { header: mainHeader, titleEl: headerTitle, closeBtn } = createHeader((window.DualChatbotConfig && DualChatbotConfig.advisorHeaderTitle) ? DualChatbotConfig.advisorHeaderTitle : 'Berater-Chat', { className: 'dual-chatbot-main-header' });\n\n    // Helper to set sidebar state programmatically\n    function setSidebar(open){\n      fs.classList.toggle('dual-chatbot-minimized', !open);\n      sidebarToggle.setAttribute('aria-expanded', String(open));\n      const lbl = open ? 'Sidebar schließen' : 'Sidebar öffnen';\n      sidebarToggle.setAttribute('aria-label', lbl);\n      sidebarToggle.setAttribute('title', lbl);\n      advisorMinimized = !open;\n    }\n\r\n    \r\n\r\n    \r\n    const micIcon = createElement('button', 'dual-chatbot-microphone');\r\n    micIcon.type = 'button';\r\n    try { micIcon.setAttribute('aria-label', (DualChatbotConfig && DualChatbotConfig.labelMicrophone) ? DualChatbotConfig.labelMicrophone : 'Microphone'); } catch(_) {}\r\n    micIcon.setAttribute('aria-pressed','false');\r\n    const micMask = createElement('span', 'dual-chatbot-icon-mask');\r\n    micIcon.appendChild(micMask);\r\n\r\n    // Aufnahme-Aktionsleiste (Vorschau + Abbrechen + Ãœbernehmen)\r\n    const recordActions = createElement('div', 'dual-chatbot-record-actions');\r\n    const recordPreview = createElement('span', 'dual-chatbot-record-preview');\r\n    const cancelRecordBtn = createElement('button', 'dual-chatbot-record-btn dual-chatbot-record-cancel');\r\n    cancelRecordBtn.type = 'button';\r\n    cancelRecordBtn.setAttribute('aria-label','Aufnahme abbrechen');\r\n    const acceptRecordBtn = createElement('button', 'dual-chatbot-record-btn dual-chatbot-record-accept');\r\n    acceptRecordBtn.type = 'button';\r\n    acceptRecordBtn.setAttribute('aria-label','Transkript übernehmen');\r\n    recordActions.appendChild(recordPreview);\r\n    recordActions.appendChild(cancelRecordBtn);\r\n    recordActions.appendChild(acceptRecordBtn);\r\n    let searchToggle = null;\r\n    let searchEnabled = false;\r\n    if (DualChatbotConfig.webSearchEnabled) {\r\n      searchToggle = createElement('button', 'dual-chatbot-search-toggle');\r\n      searchToggle.type = 'button';\r\n      searchToggle.setAttribute('aria-label', 'Websuche');\r\n      searchToggle.setAttribute('title', 'Websuche');\r\n      const searchMask = createElement('span', 'dual-chatbot-icon-mask');\r\n      searchMask.setAttribute('aria-hidden', 'true');\r\n      searchToggle.appendChild(searchMask);\r\n      searchToggle.addEventListener('click', () => {\r\n        searchEnabled = !searchEnabled;\r\n        searchToggle.classList.toggle('active', searchEnabled);\r\n      });\r\n    }\r\n    const inputWrapper = createElement('div', 'dual-chatbot-input-wrapper');\r\n    const input = createElement('textarea', 'dual-chatbot-input');\r\n    input.setAttribute('rows', 1);\r\n    input.setAttribute('placeholder', 'Nachricht schreiben...');\r\n    const sendBtn = createElement('button', 'dual-chatbot-send');\r\n    const sendMask = createElement('span', 'dual-chatbot-icon-mask');\r\n    sendBtn.appendChild(sendMask);\r\n    sendBtn.type = 'button';\r\n\r\n    const triggerPress = () => {\r\n      sendBtn.classList.add('is-sending');\r\n      setTimeout(() => {\r\n        if (!sendBtn.dataset.sending) sendBtn.classList.remove('is-sending');\r\n      }, 120);\r\n    };\r\n    sendBtn.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' || e.key === ' ') triggerPress();\r\n    });\r\n    sendBtn.addEventListener('mousedown', triggerPress);\r\n\r\n      input.addEventListener('keydown', e => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n          e.preventDefault();\r\n          sendBtn.click();\r\n        }\r\n      });\r\n      // Auto-resize up to ~220px then scroll\r\n      (function(){\r\n        const ta = input;\r\n        const baseH = 44;\r\n        const maxH  = 220; // keep in sync with CSS\r\n        const fit = () => {\r\n          try {\r\n            ta.style.height = baseH + 'px';\r\n            const h = Math.min(ta.scrollHeight, maxH);\r\n            ta.style.height = h + 'px';\r\n            ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden';\r\n          } catch(_e){}\r\n        };\r\n        ['input','change'].forEach(ev => ta.addEventListener(ev, fit));\r\n        requestAnimationFrame(fit);\r\n      })();\r\ninputWrapper.appendChild(input);\r\ninputWrapper.appendChild(sendBtn);\r\ninputWrapper.prepend(micIcon);\r\n// Aktionsleiste direkt nach dem Mic einfügen\r\ninputWrapper.insertBefore(recordActions, micIcon.nextSibling);\r\n\r\n    // ===== AUDIO-RECORDING + TIMER + STOP-BUTTON =====  \r\nlet mediaRecorder;\r\nlet audioChunks = [];\r\nlet isRecording = false;\r\nlet recordStartTime = null;\r\nlet recordTimerInterval = null;\r\nlet pendingTranscript = '';\r\nlet discardRecording = false; // wenn true -> onstop verwirft Aufzeichnung\r\n\r\n// Timer-Element rechts neben dem Mic-Icon einfügen\r\nconst timerEl = document.createElement('span');\r\ntimerEl.className = 'dual-chatbot-record-timer';\r\ntimerEl.style.marginLeft = '10px';\r\ntimerEl.style.fontSize = '0.95em';\r\ntimerEl.style.color = '#e04a2f';\r\ntimerEl.style.display = 'none';\r\n\r\n// Timer hinter das Mic-Icon setzen\r\ninputWrapper.insertBefore(timerEl, micIcon.nextSibling);\r\n\r\nmicIcon.addEventListener('click', async function () {\r\n  // wenn aktuell Aufnahme läuft -> stoppen\r\n  if (isRecording && mediaRecorder) {\r\n    mediaRecorder.stop();\r\n    stopRecordingUI();\r\n    return;\r\n  }\r\n\r\n  // Browser-Unterstützung checken\r\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n    alert('Audioaufnahme nicht unterstützt.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Mikrofon freigeben\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    mediaRecorder = new MediaRecorder(stream);\r\n\r\n    // Aufnahme starten\r\n    audioChunks = [];\r\n    isRecording = true;\r\n    discardRecording = false;\r\n    pendingTranscript = '';\r\n    micIcon.classList.add('recording');\r\n    timerEl.style.display = '';\r\n    showRecordActions('recording');\r\n    recordStartTime = Date.now();\r\n    updateTimer();\r\n    recordTimerInterval = setInterval(updateTimer, 250);\r\n\r\n    mediaRecorder.ondataavailable = (e) => {\r\n      audioChunks.push(e.data);\r\n    };\r\n\r\nmediaRecorder.onstop = async () => {\r\n      try { if (mediaRecorder && mediaRecorder.stream) { mediaRecorder.stream.getTracks().forEach(t => t.stop()); } } catch(e) {}\r\n      stopRecordingUI();\r\n\r\n      // Wenn abgebrochen, nichts weiter tun\r\n      if (discardRecording) {\r\n        audioChunks = [];\r\n        hideRecordActions();\r\n        discardRecording = false;\r\n        return;\r\n      }\r\n\r\n      // Blob erstellen und zu Whisper senden\r\n      const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\r\n\r\n      recordPreview.textContent = 'Transkribiere ...';\r\n      showRecordActions('processing');\r\n      input.disabled = true;\r\n\r\n      const formData = new FormData();\r\n      formData.append('audio', audioBlob, 'recording.webm');\r\n      formData.append('lang', 'de');\r\n\r\n      try {\r\n          const res = await wpFetch(DualChatbotConfig.whisperApiUrl, {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n          const data = await res.json().catch(()=>({}));\r\n          if (res.ok && data && (data.transcript || data.text)) {\r\n            pendingTranscript = (data.transcript || data.text || '').trim();\r\n            recordPreview.textContent = pendingTranscript.length > 64 ? (pendingTranscript.slice(0, 64) + '...') : pendingTranscript;\r\n            showRecordActions('review');\r\n          } else {\r\n            pendingTranscript = '';\r\n            const msg = (data && (data.error || data.message)) ? (data.error || data.message) : 'Transkription fehlgeschlagen.';\r\n            alert(msg);\r\n            hideRecordActions();\r\n          }\r\n        } catch (err) {\r\n          pendingTranscript = '';\r\n          alert('Fehler beim Transkribieren: ' + err.message);\r\n          hideRecordActions();\r\n        } finally {\r\n          input.disabled = false;\r\n          input.focus();\r\n        }};\r\n\r\n    mediaRecorder.start();\r\n\r\n    // Safety-Stop nach 30s\r\n    setTimeout(() => {\r\n      if (isRecording && mediaRecorder.state !== 'inactive') {\r\n        mediaRecorder.stop();\r\n        stopRecordingUI();\r\n      }\r\n    }, 30000);\r\n\r\n  } catch (e) {\r\n    stopRecordingUI();\r\n    try { if (mediaRecorder && mediaRecorder.stream) { mediaRecorder.stream.getTracks().forEach(t => t.stop()); } } catch(_e) {}\r\n    alert('Audiozugriff verweigert: ' + e.message);\r\n  }\r\n});\r\n\r\n// Aufnahme abbrechen (während Aufnahme) oder verwerfen (nach Transkription)\r\ncancelRecordBtn.addEventListener('click', () => {\r\n  if (isRecording && mediaRecorder && mediaRecorder.state !== 'inactive') {\r\n    discardRecording = true;\r\n    try { mediaRecorder.stop(); } catch (e) {}\r\n    try { if (mediaRecorder && mediaRecorder.stream) { mediaRecorder.stream.getTracks().forEach(t => t.stop()); } } catch(_e) {}\r\n    stopRecordingUI();\r\n  } else {\r\n    pendingTranscript = '';\r\n    hideRecordActions();\r\n  }\r\n});\r\n\r\n// Transkript übernehmen\r\nacceptRecordBtn.addEventListener('click', () => {\r\n  if (!pendingTranscript) return;\r\n  input.value = pendingTranscript;\r\n  input.dispatchEvent(new Event('input'));\r\n  pendingTranscript = '';\r\n  hideRecordActions();\r\n  input.focus();\r\n});\r\n\r\nfunction updateTimer() {\r\n  if (!isRecording) {\r\n    timerEl.textContent = '';\r\n    timerEl.style.display = 'none';\r\n    return;\r\n  }\r\n  const elapsed = Math.floor((Date.now() - recordStartTime) / 1000);\r\n  const min = String(Math.floor(elapsed / 60)).padStart(2, '0');\r\n  const sec = String(elapsed % 60).padStart(2, '0');\r\n  timerEl.textContent = `${min}:${sec}`;\r\n}\r\n\r\n  function stopRecordingUI() {\r\n  isRecording = false;\r\n  micIcon.classList.remove('recording');\r\n  clearInterval(recordTimerInterval);\r\n  timerEl.textContent = '';\r\n  timerEl.style.display = 'none';\r\n}\r\n\r\n// Anzeige der Aufnahme-Aktionen steuern\r\nfunction showRecordActions(mode) {\r\n  // mode: 'recording' | 'processing' | 'review'\r\n  recordActions.style.display = 'inline-flex';\r\n  recordActions.classList.toggle('is-recording', mode === 'recording');\r\n  recordActions.classList.toggle('is-processing', mode === 'processing');\r\n  recordActions.classList.toggle('is-review', mode === 'review');\r\n  // Timer nur im Recording zeigen\r\n  if (mode === 'recording') {\r\n    timerEl.style.display = 'inline-block';\r\n  } else {\r\n    timerEl.style.display = 'none';\r\n  }\r\n  // Buttons schalten\r\n  if (mode === 'recording' || mode === 'processing') {\r\n    acceptRecordBtn.style.display = 'none';\r\n    cancelRecordBtn.style.display = '';\r\n    recordPreview.style.display = mode === 'processing' ? '' : 'none';\r\n  } else if (mode === 'review') {\r\n    acceptRecordBtn.style.display = '';\r\n    cancelRecordBtn.style.display = '';\r\n    recordPreview.style.display = '';\r\n  }\r\n}\r\nfunction hideRecordActions() {\r\n  recordActions.style.display = 'none';\r\n  recordActions.classList.remove('is-recording','is-processing','is-review');\r\n  recordPreview.textContent = '';\r\n  acceptRecordBtn.style.display = 'none';\r\n  cancelRecordBtn.style.display = 'none';\r\n  timerEl.style.display = 'none';\r\n}\r\n\r\n// Senden-Button\r\n  sendBtn.addEventListener('click', async () => {\r\n  const text = input.value.trim();\r\n  const safeText = clampText(text);\r\n  if (!safeText) return;\r\n  input.value = '';\r\n  input.dispatchEvent(new Event('input'));\r\n  try {\r\n    sendBtn.classList.add('is-sending');\r\n    sendBtn.dataset.sending = 'true';\r\n    // Pre-generate a client message id so DOM + server share the same id\r\n    const plannedClientMsgId = (window.crypto && crypto.randomUUID) ? crypto.randomUUID() : (Date.now().toString(16)+Math.random().toString(16).slice(2,10));\r\n    appendMessageToContainer(mainChat, 'user', safeText, null, { clientMsgId: plannedClientMsgId });\r\n    await sendMessageWithExtras(safeText, mainChat, searchEnabled, { clientMsgId: plannedClientMsgId });\r\n    await loadSessions(searchInput.value.trim());\r\n  } catch (err) {\r\n    console.error(err);\r\n  } finally {\r\n    delete sendBtn.dataset.sending;\r\n    sendBtn.classList.remove('is-sending');\r\n    try { input && input.focus(); } catch(_) {}\r\n  }\r\n});\r\n\r\n// Footer zusammensetzen (robust, falls mainFooter unerwartet fehlt)\r\nconst footerEl = (typeof mainFooter !== 'undefined' && mainFooter) ? mainFooter : createElement('div', 'dual-chatbot-main-footer');\r\nif (searchToggle) footerEl.appendChild(searchToggle);\r\nfooterEl.appendChild(inputWrapper);\r\n\r\nmain.appendChild(mainHeader);\r\nmain.appendChild(mainChat);\r\nmain.appendChild(footerEl);\r\n    fs.appendChild(sidebar);\r\n    fs.appendChild(main);\r\n    // Insert backdrop as the last child to sit above main but below sidebar via z-index\r\n    fs.appendChild(backdrop);\r\n    document.body.appendChild(fs);\r\n// Mark as mounted to prevent duplicate UI builds\r\nwindow.__DualChatbotWidgetMounted = true;\r\n// Lock page scroll so only the chatbot shows a scrollbar\r\ndocument.documentElement.classList.add('dual-chatbot-modal-open');\r\ndocument.body.classList.add('dual-chatbot-modal-open');\r\n    // Show initial greeting for members/advisor once per session\r\n    showGreetingOnce(mainChat, 'members');\r\n    (function () {\r\n      const ta = document.querySelector('.dual-chatbot-input');\r\n      if (!ta) return;\r\n\r\n      const baseH = 44;   // muss zur CSS-Höhe passen\r\n      const maxH  = 160;  // muss zur CSS max-height passen\r\n\r\n      const fit = () => {\r\n        ta.style.height = baseH + 'px';\r\n        const h = Math.min(ta.scrollHeight, maxH);\r\n        ta.style.height = h + 'px';\r\n        ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden';\r\n      };\r\n\r\n      ['input','change'].forEach(ev => ta.addEventListener(ev, fit));\r\n      // Initial\r\n      requestAnimationFrame(fit);\r\n    })();\r\n\r\n    // Ensure initial auto-resize aligns with 220px cap even if earlier code used a lower cap\r\n    (function(){\r\n      try {\r\n        const ta = document.querySelector('.dual-chatbot-input');\r\n        if (!ta) return;\r\n        const baseH = 44; // match CSS min-height\r\n        const maxH  = 220; // match CSS max-height\r\n        const fit = () => {\r\n          ta.style.height = baseH + 'px';\r\n          const h = Math.min(ta.scrollHeight, maxH);\r\n          ta.style.height = h + 'px';\r\n          ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden';\r\n        };\r\n        requestAnimationFrame(fit);\r\n      } catch(_e) {}\r\n    })();\r\n\r\n    // Sessions und Chatverlauf laden\r\n    // Perf: widget build end\r\n    try {\r\n      if (uiStart) {\r\n        const ms = Math.round((performance.now() - uiStart));\r\n        trackEvent('perf_ui', { session_id: currentSession || 'ui', latency_ms: ms, ts: String(Date.now()) });\r\n      }\r\n    } catch(_){}\r\n\r\n    async function loadSessions(query = '') {\r\n      try {\r\n        const url = `${restBase}/search_sessions?query=${encodeURIComponent(query)}&context=advisor`;\r\n        let data = { sessions: [] };\r\n        try {\r\n          const res = await wpFetch(url, { method: 'GET' });\r\n          const txt = await res.text();\r\n          try { data = JSON.parse(txt); } catch (pe) { if (debugEnabled) console.error('[SESSIONS] parse error', pe, txt.slice(0,200)); }\r\n        } catch (fe) {\r\n          if (debugEnabled) console.error('[SESSIONS] fetch error', fe);\r\n        }\r\n        list.innerHTML = '';\r\n        if (data.sessions && data.sessions.length) {\r\n          data.sessions.forEach(sess => {\r\n            const title = sess.title || sess.session_id;\r\n            const li = createElement('li', 'dual-chatbot-session-item');\r\n            const titleSpan = createElement('span', 'dual-chatbot-session-title', [title]);\r\n            li.appendChild(titleSpan);\r\n            const delBtn = createElement('button', 'dual-chatbot-delete-btn');\r\n            delBtn.type = 'button';\r\n            delBtn.setAttribute('aria-label', 'Löschen');\r\n            delBtn.setAttribute('title', 'Löschen');\r\n            // Ensure delete a11y text uses UTF-8\r\n            try { delBtn.setAttribute('aria-label', 'Löschen'); delBtn.setAttribute('title', 'Löschen'); } catch(_) {}\r\n            // Rename button: dedicated class + SVG icon (currentColor)\r\n            const renameBtn = createElement('button', 'dual-chatbot-rename-btn');\r\n            renameBtn.type = 'button';\r\n            renameBtn.setAttribute('aria-label', 'Umbenennen');\r\n            renameBtn.setAttribute('title', 'Umbenennen');\r\n            renameBtn.innerHTML = `\r\n  <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" aria-hidden=\"true\">\r\n    <path d=\"M3 17.25V21h3.75L17.81 9.94a1 1 0 0 0 0-1.41l-3.34-3.34a1 1 0 0 0-1.41 0L3 17.25zM14.06 5.19l3.34 3.34\"\r\n          fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n  </svg>\r\n`;\r\n            // Replace inline SVG with CSS mask icon\r\n            try { renameBtn.innerHTML = ''; } catch(_) {}\r\n            const renameIcon = createElement('span', 'dual-chatbot-icon-mask');\r\n            renameIcon.setAttribute('aria-hidden', 'true');\r\n            renameBtn.appendChild(renameIcon);\r\n            li.appendChild(renameBtn);\r\n            li.appendChild(delBtn);\r\n            li.dataset.sessionId = sess.session_id;\r\n            // Selecting a session (click on text OR anywhere on the item)\r\n            const openSession = () => {\r\n              currentSession = sess.session_id;\r\n              list.querySelectorAll('li').forEach(l => { l.classList.remove('active'); l.removeAttribute('aria-current'); });\r\n              li.classList.add('active');\r\n              li.setAttribute('aria-current', 'true');\r\n              loadHistory(sess.session_id);\r\n            };\r\n            // Mark active session on initial render\r\n            if (currentSession && currentSession === sess.session_id) {\r\n              li.classList.add('active');\r\n              li.setAttribute('aria-current', 'true');\r\n            }\r\n            // Avoid double-trigger via bubbling: handle either target\r\n            titleSpan.addEventListener('click', (e) => { e.stopPropagation(); openSession(); });\r\n            li.addEventListener('click', openSession);\r\n            // Double click to rename\r\n            titleSpan.addEventListener('dblclick', () => {\r\n              const currentText = titleSpan.textContent;\r\n              const inputEdit = createElement('input', 'dual-chatbot-rename-input');\r\n              inputEdit.type = 'text';\r\n              inputEdit.value = currentText;\r\n              li.replaceChild(inputEdit, titleSpan);\r\n              li.classList.add('is-renaming');\r\n              inputEdit.focus();\r\n              const finishRename = async () => {\r\n                const newTitle = inputEdit.value.trim();\r\n                if (newTitle && newTitle !== currentText) {\r\n                  await wpFetch(`${restBase}/rename_session`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ session_id: sess.session_id, title: newTitle })\r\n                  });\r\n                  titleSpan.textContent = newTitle;\r\n                }\r\n                li.replaceChild(titleSpan, inputEdit);\r\n                li.classList.remove('is-renaming');\r\n              };\r\n              inputEdit.addEventListener('blur', finishRename);\r\n              inputEdit.addEventListener('keydown', e => {\r\n                if (e.key === 'Enter') {\r\n                  e.preventDefault();\r\n                  finishRename();\r\n                }\r\n              });\r\n            });\r\n            renameBtn.addEventListener('click', e => {\r\n              e.stopPropagation();\r\n              const currentText = titleSpan.textContent;\r\n              const inputEdit = createElement('input', 'dual-chatbot-rename-input');\r\n              inputEdit.type = 'text';\r\n              inputEdit.value = currentText;\r\n              li.replaceChild(inputEdit, titleSpan);\r\n              li.classList.add('is-renaming');\r\n              inputEdit.focus();\r\n              const finishRename = async () => {\r\n                const newTitle = inputEdit.value.trim();\r\n                if (newTitle && newTitle !== currentText) {\r\n                  await wpFetch(`${restBase}/rename_session`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ session_id: sess.session_id, title: newTitle })\r\n                  });\r\n                  titleSpan.textContent = newTitle;\r\n                }\r\n                li.replaceChild(titleSpan, inputEdit);\r\n                li.classList.remove('is-renaming');\r\n              };\r\n              inputEdit.addEventListener('blur', finishRename);\r\n              inputEdit.addEventListener('keydown', ev => {\r\n                if (ev.key === 'Enter') {\r\n                  ev.preventDefault();\r\n                  finishRename();\r\n                }\r\n              });\r\n            });\r\n            delBtn.addEventListener('click', async e => {\r\n              e.stopPropagation();\r\n              if (confirm('Gespräch löschen?')) {\r\n                await wpFetch(`${restBase}/delete_session`, {\r\n                  method: 'POST',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify({ session_id: sess.session_id })\r\n                });\r\n                if (currentSession === sess.session_id) {\r\n                  currentSession = null;\r\n                  mainChat.innerHTML = '';\r\n                }\r\n                await loadSessions(searchInput.value.trim());\r\n              }\r\n            });\r\n            list.appendChild(li);\r\n          });\r\n        }\r\n      } catch (err) {\r\n        if (debugEnabled) console.error('[SESSIONS] render error', err);\r\n      }\r\n    }\r\n\r\n    async function loadHistory(sessionId) {\r\n      const seq = ++historyLoadSeq;\r\n      try {\r\n        let data = { history: [] };\r\n        try {\r\n          const res = await wpFetch(`${restBase}/get_history?session_id=${encodeURIComponent(sessionId)}`, { method: 'GET' });\r\n          const txt = await res.text();\r\n          try { data = JSON.parse(txt); } catch (pe) { if (debugEnabled) console.error('[HISTORY] parse error', pe, txt.slice(0,200)); }\r\n        } catch (fe) {\r\n          if (debugEnabled) console.error('[HISTORY] fetch error', fe);\r\n        }\r\n        // Only the latest invocation may render\r\n        if (seq !== historyLoadSeq) return;\r\n        mainChat.innerHTML = '';\r\n        if (data.history) {\r\n          const seenUser = new Set();\r\n          const seenId = new Set();\r\n          let lastUserText = null;\r\n          let lastBotText = null;\r\n          // Precompute: keep only the most recent bot message per reply_to_client_msg_id\r\n          const lastBotByRid = new Map();\r\n          for (const it of data.history) {\r\n            if (it && it.sender === 'bot' && it.reply_to_client_msg_id && it.id != null) {\r\n              const ridKey = String(it.reply_to_client_msg_id);\r\n              const cur = lastBotByRid.get(ridKey);\r\n              if (!cur || Number(it.id) > Number(cur)) lastBotByRid.set(ridKey, Number(it.id));\r\n            }\r\n          }\r\n          data.history.forEach(item => {\r\n            const id = item.id || null;\r\n            const sender = item.sender;\r\n            const cmid = item.client_msg_id || null;\r\n            const rid = item.reply_to_client_msg_id || null;\r\n            const txt = (item.message_content || '').trim();\r\n            // Ignore invalid/empty bot placeholders and invalid reply ids\r\n            if (sender === 'bot') {\r\n              if (!txt) return;\r\n              if (item.reply_to_client_msg_id === '0' || item.reply_to_client_msg_id === 0) return;\r\n              // If multiple bot answers exist for the same parent, render only the newest\r\n              if (rid && id != null) {\r\n                const lastId = lastBotByRid.get(String(rid));\r\n                if (lastId != null && Number(id) !== Number(lastId)) return;\r\n              }\r\n            }\r\n            // Dedupe by row id if present\r\n            if (id != null) {\r\n              const sid = String(id);\r\n              if (seenId.has(sid)) return; seenId.add(sid);\r\n            }\r\n            if (sender === 'user' && cmid) {\r\n              if (seenUser.has(cmid)) return; seenUser.add(cmid);\r\n            }\r\n            // Fallback dedupe by adjacent identical text (covers legacy rows without IDs)\r\n            if (sender === 'user') {\r\n              if (cmid == null && lastUserText !== null && txt === lastUserText) return;\r\n              lastUserText = txt;\r\n            } else {\r\n              if (rid == null && lastBotText !== null && txt === lastBotText) return;\r\n              lastBotText = txt;\r\n            }\r\n            appendMessageToContainer(mainChat, sender, item.message_content, id, { clientMsgId: cmid, replyToClientMsgId: rid });\r\n          });\r\n            // After rendering the full history, normalize bars once\r\n            try {\r\n              // Prune any empty bot messages or stray bars before normalizing\r\n              pruneEmptyMessages(mainChat);\r\n              normalizeActionBars(mainChat);\r\n            } catch(_){}\r\n        }\r\n        mainChat.scrollTop = mainChat.scrollHeight;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n  // --- Message rendering helpers (actions, code copy) ---\r\n  function detectLanguage(snippet) {\r\n    const s = snippet.trim();\r\n    if (/^\\{[\\s\\S]*\\}$/.test(s) || /\"\\w+\"\\s*:/.test(s)) return 'json';\r\n    if (/^<\\/?[a-z!]/i.test(s)) return 'html';\r\n    if (/function\\s+|=>|const\\s+|let\\s+|console\\./.test(s)) return 'javascript';\r\n    if (/def\\s+\\w+\\(|import\\s+\\w+|print\\(/.test(s)) return 'python';\r\n    if (/^\\$|\\becho\\b|\\bgrep\\b|\\bcat\\b/.test(s)) return 'bash';\r\n    if (/\\$[a-z_]+\\s*=|->|echo\\s+|function\\s*\\(/i.test(s)) return 'php';\r\n    if (/^\\.|\\#[^{]+\\{|\\bcolor:|display:/.test(s)) return 'css';\r\n    return 'text';\r\n  }\r\n  function setMessageContent(el, text) {\r\n    // Render rich message content into an existing container. If the provided\r\n    // element is already the content container, render directly into it to\r\n    // avoid nested wrappers (which could visually push action bars above).\r\n    let content;\r\n    if (el.classList && el.classList.contains('dual-chatbot-message-content')) {\r\n      el.innerHTML = '';\r\n      content = el;\r\n    } else {\r\n      el.innerHTML = '';\r\n      content = createElement('div', 'dual-chatbot-message-content');\r\n      el.appendChild(content);\r\n    }\r\n    // parse triple backticks\r\n    const regex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\r\n    let lastIndex = 0; let m;\r\n    while ((m = regex.exec(text)) !== null) {\r\n      const before = text.slice(lastIndex, m.index);\r\n      if (before) content.appendChild(document.createTextNode(before));\r\n      const lang = (m[1] || detectLanguage(m[2])).toLowerCase();\r\n      const pre = createElement('pre', 'dual-codeblock');\r\n      const code = createElement('code', `lang-${lang}`);\r\n      code.textContent = m[2];\r\n      const copyBtn = createElement('button', 'dual-code-copy icon-copy');\r\n      copyBtn.setAttribute('aria-label','Code kopieren');\r\n      copyBtn.setAttribute('data-tip','Kopieren');\r\n      copyBtn.type = 'button';\r\n      copyBtn.addEventListener('click', async () => {\r\n        try { await navigator.clipboard.writeText(m[2]); copyBtn.setAttribute('data-tip','Kopiert'); setTimeout(()=>copyBtn.setAttribute('data-tip','Kopieren'), 1200);} catch(_e) {}\r\n      });\r\n      const label = createElement('span', 'dual-code-lang', [lang]);\r\n      pre.appendChild(copyBtn);\r\n      pre.appendChild(label);\r\n      pre.appendChild(code);\r\n      content.appendChild(pre);\r\n      lastIndex = regex.lastIndex;\r\n    }\r\n    const tail = text.slice(lastIndex);\r\n    if (tail) content.appendChild(document.createTextNode(tail));\r\n    // if el was not the content container, it already has the child appended\r\n  }\r\nfunction buildMsgActions(msgRoot, sender, id, originalText) {\r\n  // Idempotent: ensure a single persistent action bar per message\r\n  // Only attach actions when there is meaningful content. If no content,\r\n  // remove any existing bars and bail.\r\n  try {\r\n    const contentText = (typeof originalText === 'string' && originalText.length)\r\n      ? originalText\r\n      : (msgRoot.querySelector('.dual-chatbot-message-content')?.innerText || msgRoot.innerText || '');\r\n    const hasText = !!(contentText && contentText.trim().length);\r\n    if (!hasText) {\r\n      try { msgRoot.querySelectorAll('.dual-msg-actions').forEach(b => b.remove()); } catch(_){}\r\n      return;\r\n    }\r\n  } catch(_) { /* proceed with best-effort */ }\r\n  const stableId = (id != null && id !== undefined) ? String(id) : (msgRoot && msgRoot.dataset && msgRoot.dataset.id ? String(msgRoot.dataset.id) : '');\r\n  let bar = null;\r\n  try {\r\n    if (stableId) {\r\n      bar = msgRoot.querySelector(`.dual-msg-actions[data-for-id=\"${CSS && CSS.escape ? CSS.escape(stableId) : stableId}\"]`);\r\n    }\r\n  } catch(_e) {}\r\n  if (!bar) bar = msgRoot.querySelector('.dual-msg-actions');\r\n  const allBars = msgRoot.querySelectorAll('.dual-msg-actions');\r\n  if (allBars.length > 1) {\r\n    for (let i = 1; i < allBars.length; i++) allBars[i].remove();\r\n    bar = allBars[0];\r\n  }\r\n  if (bar && bar.dataset && bar.dataset.initialized === '1') {\r\n    if (bar !== msgRoot.lastElementChild) msgRoot.appendChild(bar);\r\n    // Even if already initialized, adjust Edit visibility for user messages\r\n    if (sender === 'user') {\r\n      let isLastUser = false;\r\n      try {\r\n        const list = msgRoot.closest('.dual-chatbot-main-chat, .dual-chatbot-chat-area, .dual-chatbot-messages, .dual-chat-history, .dual-chatbot, body');\r\n        if (list) {\r\n          let users = [];\r\n          try {\r\n            users = Array.from(list.querySelectorAll(':scope > .dual-chatbot-message.dual-chatbot-user'));\r\n          } catch(_s) {\r\n            users = Array.from(list.querySelectorAll('.dual-chatbot-message.dual-chatbot-user')).filter(u => u.parentElement === list);\r\n          }\r\n          isLastUser = users.length ? (users[users.length - 1] === msgRoot) : true;\r\n        }\r\n      } catch(_) { isLastUser = false; }\r\n      if (isLastUser) {\r\n        if (!bar.querySelector('.msg-edit')) {\r\n          const btnEdit = createElement('button', 'dual-msg-btn msg-edit icon-edit');\r\n          btnEdit.setAttribute('aria-label','Bearbeiten'); btnEdit.setAttribute('data-tip','Bearbeiten');\r\n          btnEdit.addEventListener('click', () => {\r\n            const bubble = msgRoot.querySelector('.dual-chatbot-bubble');\r\n            const content = msgRoot.querySelector('.dual-chatbot-message-content');\r\n            const old = content ? content.innerText : originalText || '';\r\n            const wrap = createElement('div', 'dual-chatbot-input-wrapper dual-inline-edit');\r\n            const ta = createElement('textarea', 'dual-chatbot-input');\r\n            ta.setAttribute('rows', 1);\r\n            ta.value = old;\r\n            try { msgRoot.classList.add('is-editing'); } catch(_) {}\r\n            const cancelBtn = createElement('button', 'msg-edit-cancel');\r\n            cancelBtn.type = 'button';\r\n            cancelBtn.setAttribute('aria-label','Abbrechen');\r\n            cancelBtn.setAttribute('data-tip','Abbrechen');\r\n            cancelBtn.setAttribute('title','Abbrechen');\r\n            const saveBtn = createElement('button', 'dual-chatbot-send'); saveBtn.type = 'button';\r\n            const mask = createElement('span', 'dual-chatbot-icon-mask'); saveBtn.appendChild(mask);\r\n            wrap.appendChild(ta);\r\n            wrap.appendChild(cancelBtn);\r\n            wrap.appendChild(saveBtn);\r\n            if (bubble) bubble.replaceWith(wrap); else if (content) content.replaceWith(wrap);\r\n            const baseH = 44; const maxH = 220;\r\n            const fit = () => { try { ta.style.height = baseH + 'px'; const h = Math.min(ta.scrollHeight, maxH); ta.style.height = h + 'px'; ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden'; } catch(_){} };\r\n            ['input','change'].forEach(ev => ta.addEventListener(ev, fit)); requestAnimationFrame(fit); setTimeout(fit, 60); ta.focus();\r\n            const restoreView = (text) => {\r\n              const newBubble = createElement('div','dual-chatbot-bubble');\r\n              const cont = createElement('div','dual-chatbot-message-content'); cont.textContent = text;\r\n              newBubble.appendChild(cont);\r\n              wrap.replaceWith(newBubble);\r\n              try { msgRoot.classList.remove('is-editing'); } catch(_) {}\r\n              buildMsgActions(msgRoot, 'user', id, text);\r\n              try { const editBtn = msgRoot.querySelector('.msg-edit'); if (editBtn) editBtn.focus(); } catch(_){}\r\n            };\r\n            const doSave = async () => {\r\n              const val = ta.value.trim();\r\n              if (!val || val === old) { restoreView(old); return; }\r\n              try { await wpFetch(`${restBase}/edit_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id, session_id: currentSession, content: val })}); } catch(_) {}\r\n              restoreView(val);\r\n              let next = msgRoot.nextElementSibling;\r\n              while (next && !next.classList.contains('dual-chatbot-bot') && !next.classList.contains('dual-chatbot-user')) next = next.nextElementSibling;\r\n              if (next && next.classList.contains('dual-chatbot-bot')) {\r\n                const botId = next.dataset && next.dataset.id ? Number(next.dataset.id) : null;\r\n                let rem = next.nextElementSibling;\r\n                while (rem && !rem.classList.contains('dual-chatbot-user')) {\r\n                  if (rem.classList.contains('dual-chatbot-bot')) {\r\n                    try { const rid = rem.dataset && rem.dataset.id ? Number(rem.dataset.id) : null; if (rid) await wpFetch(`${restBase}/delete_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: rid, session_id: currentSession })}); } catch(_){}\r\n                    rem.remove();\r\n                  }\r\n                  rem = rem.nextElementSibling;\r\n                }\r\n                sendMessageWithExtras(val, msgRoot.parentElement, false, { replaceBotEl: next, replaceBotId: botId });\r\n              } else {\r\n                const existingCmid = (msgRoot && msgRoot.dataset && msgRoot.dataset.clientMsgId) ? msgRoot.dataset.clientMsgId : undefined;\r\n                sendMessageWithExtras(val, msgRoot.parentElement, false, { noUserInsert: true, clientMsgId: existingCmid });\r\n              }\r\n            };\r\n            const doCancel = () => restoreView(old);\r\n            saveBtn.addEventListener('click', doSave);\r\n            cancelBtn.addEventListener('click', doCancel);\r\n            wrap.addEventListener('keydown', e => { if (e.key === 'Escape') { e.preventDefault(); doCancel(); } }, true);\r\n            ta.addEventListener('keydown', e=>{ if (e.key==='Enter' && !e.shiftKey) { e.preventDefault(); doSave(); } if (e.key==='Escape') { e.preventDefault(); doCancel(); } });\r\n          });\r\n          bar.appendChild(btnEdit);\r\n        }\r\n      } else {\r\n        try { bar.querySelectorAll('.msg-edit').forEach(el => el.remove()); } catch(_){}\r\n      }\r\n    }\r\n    return;\r\n  }\r\n  if (!bar) bar = createElement('div', 'dual-msg-actions');\r\n    const btnCopy = createElement('button', 'dual-msg-btn msg-copy icon-copy');\r\n    btnCopy.setAttribute('aria-label','Kopieren');\r\n    btnCopy.setAttribute('data-tip','Kopieren');\r\n    btnCopy.addEventListener('click', async () => {\r\n      const txt = originalText || msgRoot.querySelector('.dual-chatbot-message-content')?.innerText || msgRoot.innerText;\r\n      try { await navigator.clipboard.writeText(txt); btnCopy.setAttribute('data-tip','Kopiert'); setTimeout(()=>btnCopy.setAttribute('data-tip','Kopieren'), 1200);} catch(_e){}\r\n    });\r\n    // reset or initialize content once\r\n    bar.innerHTML = '';\r\n    bar.appendChild(btnCopy);\r\n    if (sender === 'bot') {\r\n      const btnRegen = createElement('button', 'dual-msg-btn msg-regen icon-regen');\r\n      btnRegen.setAttribute('aria-label','Neu generieren');\r\n      btnRegen.setAttribute('data-tip','Neu generieren');\r\n      btnRegen.addEventListener('click', () => {\r\n        // find previous user message text in container\r\n        let prev = msgRoot.previousElementSibling;\r\n        while (prev && !prev.classList.contains('dual-chatbot-user')) prev = prev.previousElementSibling;\r\n        const prompt = prev ? (prev.querySelector('.dual-chatbot-message-content')?.innerText || prev.innerText) : '';\r\n        if (prompt) {\r\n          const botId = id || (msgRoot.dataset && msgRoot.dataset.id ? Number(msgRoot.dataset.id) : null);\r\n          sendMessageWithExtras(prompt, msgRoot.parentElement, false, { replaceBotEl: msgRoot, replaceBotId: botId });\r\n        }\r\n      });\r\n      bar.appendChild(btnRegen);\r\n      const up = createElement('button', 'dual-msg-btn msg-up icon-up');\r\n      up.setAttribute('aria-label','Hilfreich'); up.setAttribute('data-tip','Hilfreich');\r\n      const down = createElement('button', 'dual-msg-btn msg-down icon-down');\r\n      down.setAttribute('aria-label','Nicht hilfreich'); down.setAttribute('data-tip','Nicht hilfreich');\r\n      const react = async (r) => {\r\n        let feedback = '';\r\n        if (r === 'down') feedback = window.prompt('Was war nicht hilfreich? (optional)') || '';\r\n        try { await wpFetch(`${restBase}/react_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: id || 0, reaction: r, feedback })}); } catch(_e) {}\r\n      };\r\n      up.addEventListener('click', ()=>react('up'));\r\n      down.addEventListener('click', ()=>react('down'));\r\n      bar.appendChild(up); bar.appendChild(down);\r\n      // Delete bot message (DOM + history)\r\n        const btnDelBot = createElement('button', 'dual-msg-btn msg-del icon-del');\r\n      btnDelBot.setAttribute('aria-label','Löschen'); btnDelBot.setAttribute('data-tip','Löschen');\r\n      btnDelBot.addEventListener('click', async () => {\r\n        const parent = msgRoot.parentElement;\r\n        if (!confirm('Antwort löschen?')) return;\r\n        const rowId = id || (msgRoot && msgRoot.dataset && msgRoot.dataset.id ? Number(msgRoot.dataset.id) : null);\r\n        try { if (rowId) { await wpFetch(`${restBase}/delete_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: rowId, session_id: currentSession })}); } } catch(_e) {}\r\n        try { msgRoot.querySelectorAll('.dual-msg-actions').forEach(b => b.remove()); msgRoot.remove(); } catch(_e) {}\r\n          try { normalizeActionBars(parent); } catch(_){}\r\n      });\r\n      bar.appendChild(btnDelBot);\r\n    } else {\r\n      const btnEdit = createElement('button', 'dual-msg-btn msg-edit icon-edit');\r\n      btnEdit.setAttribute('aria-label','Bearbeiten'); btnEdit.setAttribute('data-tip','Bearbeiten');\r\n      const btnDel = createElement('button', 'dual-msg-btn msg-del icon-del');\r\n      btnDel.setAttribute('aria-label','Löschen'); btnDel.setAttribute('data-tip','Löschen');\r\n      btnEdit.addEventListener('click', () => {\r\n        const bubble = msgRoot.querySelector('.dual-chatbot-bubble');\r\n        const content = msgRoot.querySelector('.dual-chatbot-message-content');\r\n        const old = content ? content.innerText : originalText || '';\r\n        // Build inline editor styled like input pill\r\n        const wrap = createElement('div', 'dual-chatbot-input-wrapper dual-inline-edit');\r\n        const ta = createElement('textarea', 'dual-chatbot-input');\r\n        ta.setAttribute('rows', 1);\r\n        ta.value = old;\r\n        // Add editing state class on the message root for styling hooks\r\n        try { msgRoot.classList.add('is-editing'); } catch(_) {}\r\n        // Icon-only cancel button (accessible, tooltip)\r\n        const cancelBtn = createElement('button', 'msg-edit-cancel');\r\n        cancelBtn.type = 'button';\r\n        cancelBtn.setAttribute('aria-label','Abbrechen');\r\n        cancelBtn.setAttribute('data-tip','Abbrechen');\r\n        cancelBtn.setAttribute('title','Abbrechen');\r\n        const saveBtn = createElement('button', 'dual-chatbot-send'); saveBtn.type = 'button';\r\n        const mask = createElement('span', 'dual-chatbot-icon-mask'); saveBtn.appendChild(mask);\r\n        wrap.appendChild(ta);\r\n        // place cancel icon inside wrapper (top-right via CSS)\r\n        wrap.appendChild(cancelBtn);\r\n        wrap.appendChild(saveBtn);\r\n        if (bubble) bubble.replaceWith(wrap); else if (content) content.replaceWith(wrap);\r\n        // Auto-grow the textarea so full text stays visible\r\n          const baseH = 44;\r\n          const maxH = 220;\r\n          const fit = () => {\r\n            try {\r\n              ta.style.height = baseH + 'px';\r\n              const h = Math.min(ta.scrollHeight, maxH);\r\n              ta.style.height = h + 'px';\r\n              ta.style.overflowY = (ta.scrollHeight > maxH) ? 'auto' : 'hidden';\r\n            } catch(_e){}\r\n          };\r\n        ['input','change'].forEach(ev => ta.addEventListener(ev, fit));\r\n        requestAnimationFrame(fit);\r\n        setTimeout(fit, 60);\r\n        ta.focus();\r\n\r\n        const restoreView = (text) => {\r\n          const newBubble = createElement('div','dual-chatbot-bubble');\r\n          const cont = createElement('div','dual-chatbot-message-content'); cont.textContent = text;\r\n          newBubble.appendChild(cont);\r\n          wrap.replaceWith(newBubble);\r\n          try { msgRoot.classList.remove('is-editing'); } catch(_) {}\r\n          buildMsgActions(msgRoot, 'user', id, text);\r\n          // return focus to the Edit button for seamless navigation\r\n          try {\r\n            const editBtn = msgRoot.querySelector('.msg-edit');\r\n            if (editBtn) editBtn.focus();\r\n          } catch(_){}\r\n        };\r\n\r\n        const doSave = async () => {\r\n          const val = ta.value.trim();\r\n          if (!val || val === old) { restoreView(old); return; }\r\n          try { await wpFetch(`${restBase}/edit_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id, session_id: currentSession, content: val })}); } catch(_e) {}\r\n          restoreView(val);\r\n          // Replace the following bot message instead of adding a new one\r\n          let next = msgRoot.nextElementSibling;\r\n          while (next && !next.classList.contains('dual-chatbot-bot') && !next.classList.contains('dual-chatbot-user')) next = next.nextElementSibling;\r\n          if (next && next.classList.contains('dual-chatbot-bot')) {\r\n            const botId = next.dataset && next.dataset.id ? Number(next.dataset.id) : null;\r\n            // Remove any further bot messages until the next user message (clean duplicates)\r\n            let rem = next.nextElementSibling;\r\n            while (rem && !rem.classList.contains('dual-chatbot-user')) {\r\n              if (rem.classList.contains('dual-chatbot-bot')) {\r\n                try { const rid = rem.dataset && rem.dataset.id ? Number(rem.dataset.id) : null; if (rid) await wpFetch(`${restBase}/delete_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id: rid, session_id: currentSession })}); } catch(_){}\r\n                rem.remove();\r\n              }\r\n              rem = rem.nextElementSibling;\r\n            }\r\n            sendMessageWithExtras(val, msgRoot.parentElement, false, { replaceBotEl: next, replaceBotId: botId });\r\n          } else {\r\n            // If no bot answer exists yet, request one freshly but do not create a duplicate user row\r\n            const existingCmid = (msgRoot && msgRoot.dataset && msgRoot.dataset.clientMsgId) ? msgRoot.dataset.clientMsgId : undefined;\r\n            sendMessageWithExtras(val, msgRoot.parentElement, false, { noUserInsert: true, clientMsgId: existingCmid });\r\n          }\r\n        };\r\n        const doCancel = () => restoreView(old);\r\n\r\n        saveBtn.addEventListener('click', doSave);\r\n        cancelBtn.addEventListener('click', doCancel);\r\n        // ESC anywhere within the edit wrapper cancels editing\r\n        wrap.addEventListener('keydown', e => { if (e.key === 'Escape') { e.preventDefault(); doCancel(); } }, true);\r\n        ta.addEventListener('keydown', e=>{\r\n          if (e.key==='Enter' && !e.shiftKey) { e.preventDefault(); doSave(); }\r\n          if (e.key==='Escape') { e.preventDefault(); doCancel(); }\r\n        });\r\n      });\r\n      btnDel.addEventListener('click', async () => {\r\n        if (!id) { msgRoot.remove(); return; }\r\n        if (!confirm('Nachricht löschen?')) return;\r\n        try { await wpFetch(`${restBase}/delete_message`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ id, session_id: currentSession })}); msgRoot.remove(); } catch(_e) {}\r\n      });\r\n      // === Only allow editing the LAST user message ===\r\n      let isLastUser = false;\r\n      try {\r\n        const list = msgRoot.closest('.dual-chatbot-main-chat, .dual-chatbot-chat-area, .dual-chatbot-messages, .dual-chat-history, .dual-chatbot, body');\r\n        if (list) {\r\n          const users = Array.from(list.querySelectorAll('.dual-chatbot-message.dual-chatbot-user')).filter(u => u.parentElement === list);\r\n          isLastUser = users.length ? (users[users.length - 1] === msgRoot) : true;\r\n        }\r\n      } catch (_) { isLastUser = false; }\r\n      if (isLastUser) {\r\n        bar.appendChild(btnEdit);\r\n      } else {\r\n        try { bar.querySelectorAll('.msg-edit').forEach(el => el.remove()); } catch(_){}\r\n      }\r\n      bar.appendChild(btnDel);\r\n    }\r\n  if (bar !== msgRoot.lastElementChild) msgRoot.appendChild(bar);\r\n  if (bar.dataset) {\r\n    bar.dataset.initialized = '1';\r\n    if (stableId) bar.dataset.forId = stableId;\r\n  }\r\n}\r\n  // Removed legacy ensureAssistantActions; normalization covers all cases idempotently.\r\n\r\n  // Failsafe cleanup: remove empty bot messages and stray action bars\r\n  function pruneEmptyMessages(containerEl) {\r\n    try {\r\n      // Remove bot messages with no visible content (skip live typing placeholders)\r\n      const bots = containerEl.querySelectorAll('.dual-chatbot-message.dual-chatbot-bot');\r\n      bots.forEach(msg => {\r\n        if (msg.classList && msg.classList.contains('is-typing')) return;\r\n        const txt = (msg.querySelector('.dual-chatbot-message-content')?.innerText || msg.innerText || '').trim();\r\n        const rid = (msg.dataset && msg.dataset.replyToClientMsgId) ? msg.dataset.replyToClientMsgId : null;\r\n        if (!txt || rid === '0' || rid === 0) {\r\n          try { msg.querySelectorAll('.dual-msg-actions').forEach(b => b.remove()); } catch(_){}\r\n          try { msg.remove(); } catch(_){}\r\n        }\r\n      });\r\n      // Remove any action bar inside a message without content\r\n      containerEl.querySelectorAll('.dual-chatbot-message .dual-msg-actions').forEach(bar => {\r\n        try {\r\n          const parent = bar.parentElement;\r\n          if (!parent) return;\r\n          const t = (parent.querySelector('.dual-chatbot-message-content')?.innerText || parent.innerText || '').trim();\r\n          if (!t) bar.remove();\r\n        } catch(_){}\r\n      });\r\n      // Deduplicate by data-id within this container: keep first instance\r\n      const seen = new Set();\r\n      containerEl.querySelectorAll('.dual-chatbot-message[data-id]').forEach(msg => {\r\n        const mid = (msg.dataset && msg.dataset.id) ? String(msg.dataset.id) : '';\r\n        if (!mid) return;\r\n        if (seen.has(mid)) { try { msg.remove(); } catch(_){} } else { seen.add(mid); }\r\n      });\r\n    } catch(_){}\r\n  }\r\n\r\n  // Stronger normalization: ensure at most one bar per message across container\r\n  function normalizeActionBars(containerEl) {\r\n    try {\r\n      const msgs = containerEl.querySelectorAll('.dual-chatbot-message');\r\n      msgs.forEach(msg => {\r\n        const contentText = (msg.querySelector('.dual-chatbot-message-content')?.innerText || msg.innerText || '');\r\n        const hasText = !!(contentText && contentText.trim().length);\r\n        // Always dedupe bars\r\n        const bars = msg.querySelectorAll('.dual-msg-actions');\r\n        if (bars.length > 1) { for (let i = 0; i < bars.length - 1; i++) bars[i].remove(); }\r\n        // If no content: remove any stray bar and skip\r\n        if (!hasText) {\r\n          try { msg.querySelectorAll('.dual-msg-actions').forEach(b => b.remove()); } catch(_){}\r\n          return;\r\n        }\r\n        let bar = msg.querySelector('.dual-msg-actions');\r\n        if (bar) {\r\n          if (bar !== msg.lastElementChild) msg.appendChild(bar);\r\n          if (bar.dataset) bar.dataset.initialized = '1';\r\n          return;\r\n        }\r\n        // If missing and content exists, create lazily for each sender\r\n        if (msg.classList.contains('dual-chatbot-bot')) {\r\n          try { buildMsgActions(msg, 'bot', null, contentText); } catch(_) {}\r\n        } else if (msg.classList.contains('dual-chatbot-user')) {\r\n          try { buildMsgActions(msg, 'user', null, contentText); } catch(_) {}\r\n        }\r\n      });\r\n      // Enforce: only the LAST user message has an Edit button\r\n      try {\r\n        const list = containerEl.querySelector('.dual-chatbot-messages, .dual-chat-history') || containerEl;\r\n        let users = [];\r\n        try {\r\n          users = Array.from(list.querySelectorAll(':scope > .dual-chatbot-message.dual-chatbot-user'));\r\n        } catch (_selErr) {\r\n          users = Array.from(list.querySelectorAll('.dual-chatbot-message.dual-chatbot-user')).filter(u => u.parentElement === list);\r\n        }\r\n        if (!users.length) return;\r\n        const last = users[users.length - 1];\r\n        // Remove edit button from all older user messages\r\n        users.forEach(u => {\r\n          if (u !== last) {\r\n            try { u.querySelectorAll('.dual-msg-actions .msg-edit').forEach(btn => btn.remove()); } catch(_){}\r\n          }\r\n        });\r\n        // Ensure last user message has an Edit button\r\n        if (!last.querySelector('.dual-msg-actions .msg-edit')) {\r\n          const id = last.dataset && last.dataset.id ? Number(last.dataset.id) : null;\r\n          const txt = last.querySelector('.dual-chatbot-message-content')?.innerText || '';\r\n          try { buildMsgActions(last, 'user', id, txt); } catch(_){}\r\n        }\r\n      } catch(_e){}\r\n    } catch(_){}\r\n  }\r\n\r\nfunction appendMessageToContainer(containerEl, sender, text, id=null, opts={}) {\r\n        // Idempotent rendering: skip if message already exists by id/client_msg_id/reply_to_client_msg_id\r\n        try {\r\n          if (id && containerEl.querySelector(`[data-id=\"${CSS.escape(String(id))}\"]`)) {\r\n            return; // already present\r\n          }\r\n          if (opts && opts.clientMsgId) {\r\n            const cm = String(opts.clientMsgId);\r\n            if (containerEl.querySelector(`[data-client-msg-id=\"${CSS.escape(cm)}\"]`)) return;\r\n          }\r\n          if (opts && opts.replyToClientMsgId) {\r\n            const rid = String(opts.replyToClientMsgId);\r\n            if (containerEl.querySelector(`[data-reply-to-client-msg-id=\"${CSS.escape(rid)}\"]`)) return;\r\n          }\r\n        } catch(_e) {}\r\n        // Skip invalid/empty bot messages and invalid reply ids\r\n        try {\r\n          const t = (text || '').trim();\r\n          if (sender === 'bot') {\r\n            if (!t) return;\r\n            const r = opts && (opts.replyToClientMsgId ?? null);\r\n            if (r === '0' || r === 0) return;\r\n          }\r\n        } catch(_) {}\r\n        const msgEl = createElement('div', `dual-chatbot-message dual-chatbot-${sender}`);\r\n        if (id) msgEl.dataset.id = String(id);\r\n        if (opts && opts.clientMsgId) msgEl.dataset.clientMsgId = String(opts.clientMsgId);\r\n        if (opts && opts.replyToClientMsgId) msgEl.dataset.replyToClientMsgId = String(opts.replyToClientMsgId);\r\n      const contentHolder = createElement('div','dual-chatbot-message-content');\r\n      if (sender === 'bot') {\r\n        setMessageContent(contentHolder, text);\r\n        msgEl.appendChild(contentHolder);\r\n        // Do not attach actions here for history; will be added to latest only\r\n      } else {\r\n        // Wrap user content in bubble so actions can sit outside\r\n        const bubble = createElement('div','dual-chatbot-bubble');\r\n        contentHolder.textContent = text;\r\n        bubble.appendChild(contentHolder);\r\n        msgEl.appendChild(bubble);\r\n        // Ensure user action bar is present under the user message\r\n        buildMsgActions(msgEl, 'user', id, text);\r\n      }\r\n      containerEl.appendChild(msgEl);\r\n        // Guarantee a single, idempotent action bar per message\r\n        // For user messages, normalize immediately so actions show; bot handled by stream/history observer.\r\n        if (sender === 'user') normalizeActionBars(containerEl);\r\n      containerEl.scrollTop = containerEl.scrollHeight;\r\n    }\r\n\r\n    newChatBtn.addEventListener('click', () => {\r\n      // End current session (analytics)\r\n      if (currentSession) { try { trackEvent('session_end', { session_id: currentSession, client_id: analyticsState.clientId, ts: String(Date.now()) }); } catch(_){} }\r\n      currentSession = null;\r\n      mainChat.innerHTML = '';\r\n      list.querySelectorAll('li').forEach(l => l.classList.remove('active'));\r\n      try { sessionStorage.removeItem('dual_chatbot_greeted_members'); } catch(_) {}\r\n      // Show greeting again for a new chat\r\n      showGreetingOnce(mainChat, 'members');\r\n    });\r\n\r\n    searchInput.addEventListener('input', () => {\r\n      clearTimeout(searchTimeoutId);\r\n      searchTimeoutId = setTimeout(() => {\r\n        loadSessions(searchInput.value.trim());\r\n      }, 300);\r\n    });\r\n\r\n\r\n    // Observe the main chat for new assistant messages and attach actions\r\n      try {\r\n        const actionsObserver = new MutationObserver((mutations) => {\r\n          try { normalizeActionBars(mainChat); } catch(_) {}\r\n        });\r\n        // Persist observer on the fullscreen container so we can disconnect on close\r\n        fs.__actionsObserver = actionsObserver;\r\n        actionsObserver.observe(mainChat, { childList: true, subtree: true });\r\n        // initial normalize after history render\r\n        requestAnimationFrame(() => { try { normalizeActionBars(mainChat); } catch(_) {} });\r\n        setTimeout(() => { try { normalizeActionBars(mainChat); } catch(_) {} }, 120);\r\n      } catch(_){}\r\n\r\n    // Sidebar toggle and close button (advisor)\r\n    sidebarToggle.addEventListener('click', () => {\n      const open = !(sidebarToggle.getAttribute('aria-expanded') === 'true');\n      setSidebar(open);\n      return;\n      fs.classList.toggle('dual-chatbot-minimized', !open);\r\n      sidebarToggle.setAttribute('aria-expanded', String(open));\r\n      sidebarToggle.setAttribute('aria-label', !open ? 'Sidebar öffnen' : 'Sidebar schließen');\r\n      const label = open ? 'Sidebar schließen' : 'Sidebar öffnen';\r\n      sidebarToggle.setAttribute('aria-label', label);\r\n      sidebarToggle.setAttribute('title', label);\r\n      advisorMinimized = !open;\r\n    });\r\n    // Backdrop: click to minimize (CSS transitions handle slide + backdrop)\r\n    try {\r\n      const backdrop = fs.querySelector('.dual-chatbot-backdrop');\r\n      if (backdrop) {\r\n        backdrop.addEventListener('click', () => {\n          setSidebar(false);\n          return;\n          if (false) {\n            fs.classList.add('dual-chatbot-minimized');\r\n            sidebarToggle.setAttribute('aria-expanded', 'false');\r\n            sidebarToggle.setAttribute('aria-label', 'Sidebar öffnen');\r\n            advisorMinimized = true;\r\n          }\r\n        });\r\n      }\r\n    } catch(_){}\r\n    // ESC key minimizes the sidebar as well\r\n    try {\r\n      fs.addEventListener('keydown', (e) => {\n        if (e && (e.key === 'Escape' || e.key === 'Esc')) { setSidebar(false); return;\n          if (!fs.classList.contains('dual-chatbot-minimized')) {\r\n            fs.classList.add('dual-chatbot-minimized');\r\n            sidebarToggle.setAttribute('aria-expanded', 'false');\r\n            sidebarToggle.setAttribute('aria-label', 'Sidebar \u001ffnen');\r\n            advisorMinimized = true;\r\n          }\r\n        }\r\n      });\r\n    } catch(_){}\r\n      closeBtn.addEventListener('click', () => {\r\n        // End session for advisor on close\r\n        if (currentSession) { try { trackEvent('session_end', { session_id: currentSession, client_id: analyticsState.clientId, ts: String(Date.now()) }); } catch(_){} }\r\n        try { if (searchTimeoutId) { clearTimeout(searchTimeoutId); searchTimeoutId = null; } } catch(_) {}\r\n        try { if (fs.__actionsObserver) { fs.__actionsObserver.disconnect(); delete fs.__actionsObserver; } } catch(_) {}\r\n        fs.remove();\r\n        advisorMinimized = false;\r\n        // restore page scroll\r\n        document.documentElement.classList.remove('dual-chatbot-modal-open');\r\n        document.body.classList.remove('dual-chatbot-modal-open');\r\n        // If we opened directly (no bubble icon), remove the empty container as well\r\n        const cont = document.getElementById('dual-chatbot-container');\r\n        if (cont && !cont.querySelector('.dual-chatbot-icon')) {\r\n          cont.remove();\r\n        }\r\n        showChatbotTrigger();\r\n        window.widgetOpened = false;\r\n        window.__DualChatbotWidgetMounted = false;\r\n      });\r\n    loadSessions();\r\n  }\r\n\r\n    if (!window.__DualChatbotBootBound) {\r\n      window.__DualChatbotBootBound = true;\r\n      document.addEventListener('DOMContentLoaded', () => {\r\n      if ('visualViewport' in window) { visualViewport.addEventListener('resize', scrollChatToBottom); } else { window.addEventListener('resize', scrollChatToBottom); }\r\n      console.log('DOMContentLoaded Event');\r\n      // Failsafe: prune any empty bot messages or orphaned action bars on load\r\n      try {\r\n        const areas = document.querySelectorAll('.dual-chatbot-chat-area');\r\n        areas.forEach(a => pruneEmptyMessages(a));\r\n      } catch(_){}\r\n      const footerBtn = document.getElementById('open-chatbot');\r\n      if (footerBtn) {\r\n        footerBtn.classList.add('dual-chatbot-open');\r\n      // Ensure wrapper/button are visible on load in case theme hides them\r\n      const wrapper = footerBtn.closest('#dual-chatbot-widget');\r\n      if (wrapper) {\r\n        wrapper.hidden = false;\r\n        wrapper.style.removeProperty('display');\r\n        wrapper.classList.remove('hidden','is-hidden','d-none');\r\n        window.chatbotWrapper = wrapper;\r\n      }\r\n      footerBtn.hidden = false;\r\n      footerBtn.style.removeProperty('display');\r\n      footerBtn.classList.remove('hidden','is-hidden','d-none');\r\n\r\n        window.widgetOpened = false;\r\n        // Avoid binding click twice\r\n        if (!footerBtn.__dualClickBound) {\r\n          footerBtn.__dualClickBound = true;\r\n          footerBtn.addEventListener('click', function() {\r\n            if (!window.widgetOpened && !document.querySelector('.dual-chatbot-fullscreen') && !document.querySelector('.dual-chatbot-popup')) {\r\n              initChatWidget(true);\r\n              window.widgetOpened = true;\r\n              const wrapper = footerBtn.closest('#dual-chatbot-widget');\r\n              if (wrapper) {\r\n                wrapper.style.display = 'none';\r\n                window.chatbotWrapper = wrapper;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        // Fallback: If the theme button is not truly usable, spawn our floating icon (also on mobile)\r\n        setTimeout(() => {\r\n          try {\r\n            const hasAnyWidget = !!(document.querySelector('.dual-chatbot-icon') || document.querySelector('.dual-chatbot-fullscreen') || document.querySelector('.dual-chatbot-popup'));\r\n            if (!hasAnyWidget) {\r\n              // Use robust isTrulyUsable check for desktop fallback\r\n              if (!isTrulyUsable(footerBtn)) {\r\n                initChatWidget(false); // creates floating bubble icon\r\n              }\r\n            }\r\n          } catch(_){}\r\n        }, 300);\r\n      } else {\r\n        initChatWidget();\r\n      }\r\n      });\r\n    }\r\n\r\n  // Debounced responsive switcher for <=/> 800px: popup â†” fullscreen\r\n  (function setupResponsiveSwitcher(){\r\n    if (window.__DualChatbotResizeBound) return;\r\n    window.__DualChatbotResizeBound = true;\r\n    let lastSmall = isSmallScreen();\r\n    let timer = null;\r\n    const onResize = () => {\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        const nowSmall = isSmallScreen();\r\n        if (nowSmall === lastSmall) return;\r\n        lastSmall = nowSmall;\r\n        if (nowSmall) {\r\n          // To small: close popup if visible and open fullscreen\r\n          try {\r\n            const popup = document.querySelector('.dual-chatbot-popup');\r\n            if (popup && getComputedStyle(popup).display !== 'none') {\r\n              // Convert FAQ popup to fullscreen on mobile\r\n              popup.style.position = 'fixed';\r\n              popup.style.top = '0';\r\n              popup.style.left = '0';\r\n              popup.style.right = '0';\r\n              popup.style.bottom = '0';\r\n              popup.style.width = '100vw';\r\n              popup.style.height = '100vh';\r\n              popup.style.borderRadius = '0';\r\n              popup.style.zIndex = '999999';\r\n              document.documentElement.classList.add('dual-chatbot-modal-open');\r\n              document.body.classList.add('dual-chatbot-modal-open');\r\n            }\r\n          } catch(_) {}\r\n          if (!document.querySelector('.dual-chatbot-fullscreen') && advisorMode) {\r\n            initAdvisorView();\r\n          }\r\n        } else {\r\n          // To desktop: reset popup to normal style and close fullscreen\r\n          try {\r\n            const popup = document.querySelector('.dual-chatbot-popup');\r\n            if (popup) {\r\n              // Reset FAQ popup styles\r\n              popup.style.removeProperty('position');\r\n              popup.style.removeProperty('top');\r\n              popup.style.removeProperty('left');\r\n              popup.style.removeProperty('right');\r\n              popup.style.removeProperty('bottom');\r\n              popup.style.removeProperty('width');\r\n              popup.style.removeProperty('height');\r\n              popup.style.removeProperty('border-radius');\r\n              popup.style.removeProperty('z-index');\r\n              document.documentElement.classList.remove('dual-chatbot-modal-open');\r\n              document.body.classList.remove('dual-chatbot-modal-open');\r\n            }\r\n            const fs = document.querySelector('.dual-chatbot-fullscreen');\r\n            if (fs) {\r\n              const closeBtn = fs.querySelector('.dual-chatbot-close');\r\n              if (closeBtn) closeBtn.click(); else {\r\n                fs.remove();\r\n                document.documentElement.classList.remove('dual-chatbot-modal-open');\r\n                document.body.classList.remove('dual-chatbot-modal-open');\r\n                window.__DualChatbotWidgetMounted = false;\r\n              }\r\n            }\r\n          } catch(_) {}\r\n          // Ensure an icon/popup can be used again\r\n          try {\r\n            const hasContainer = !!document.getElementById('dual-chatbot-container');\r\n            const hasIcon = !!document.querySelector('.dual-chatbot-icon');\r\n            if (!window.__DualChatbotWidgetMounted && (!hasContainer || !hasIcon)) {\r\n              initChatWidget(false);\r\n            }\r\n          } catch(_) {}\r\n        }\r\n      }, 150);\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n  })();\r\n\r\n})();\r\n\r\n","// Entry for bundling. Provides modular utilities and then includes the legacy UI.\r\nimport { attachGlobalErrorHandlers } from './logger.js';\r\nimport './config.js';\r\nimport './text.js';\r\n\r\nattachGlobalErrorHandlers();\r\n\r\n// Include the legacy monolithic IIFE for now.\r\n// This keeps behavior unchanged while allowing gradual migration.\r\nimport '../chatbot.js';\r\n\r\n"],"names":["Config","raw","window","DualChatbotConfig","restUrl","String","this","analyticsRestUrl","logRestUrl","nonce","debugEnabled","maxMessageLength","Number","BUCKET","tokens","last","Date","now","async","clientLog","level","message","meta","dt","Math","min","allow","payload","url","location","href","fetch","method","headers","body","JSON","stringify","_e","logger","debug","a","info","warn","error","stack","DCB","__DualChatbotInitialized","wpFetch","opts","safeFetch","_meta","tries","tried429","sleep","ms","Promise","r","setTimeout","res","text","data","parse","e","Error","status","ok","code","msg","err","backoff","pow","ra","retry_after","_","isFinite","secs","end","id","setInterval","left","max","s","ceil","showToast","clearInterval","countdown","logEndpoint","MAX_MSG_LEN","clampText","t","replace","trim","length","slice","__logBucket","allowLog","Object","assign","addEventListener","line","lineno","col","colno","reason","analyticsEnabled","analyticsBase","analyticsState","clientId","cid","m","document","cookie","match","RegExp","decodeURIComponent","getCookie","crypto","randomUUID","toString","random","name","value","d","setTime","getTime","encodeURIComponent","toUTCString","setCookie","ensureClientId","startedFor","inactivityTimer","lastActivityAt","trackEvent","type","resolve","then","response","json","catch","ensureSessionStart","sessionId","session_id","client_id","ts","scheduleInactivityEnd","getSession","clearTimeout","sid","showChatbotTrigger","wrapper","chatbotWrapper","getElementById","querySelector","hidden","style","removeProperty","classList","remove","getComputedStyle","display","btn","icon","faqEnabled","advisorEnabled","advisorMode","isLoggedIn","faqMode","restBase","smallMql","matchMedia","isSmallScreen","matches","currentSession","firstBotChunkAtByClientMsg","create","userMsgStartAtByClientMsg","advisorMinimized","searchTimeoutId","historyLoadSeq","advisorFullscreenEl","createElement","tag","classNames","children","el","className","forEach","child","appendChild","createTextNode","Node","createTypingIndicator","wrap","setAttribute","removeTypingIndicators","containerEl","querySelectorAll","n","showGreetingOnce","mode","key","storageKey","indicator","scrollTop","scrollHeight","greetingMembers","greetingFaq","appendMessageToContainer","msgEl","content","setMessageContent","textContent","normalizeActionBars","sessionStorage","setItem","debugChatbotGreeting","faqArea","advisorArea","removeItem","contains","innerHTML","createHeader","title","controlsLeft","header","titleEl","controls","closeBtn","appendMessage","sender","chatArea","scrollChatToBottom","sendMessageWithExtras","webSearch","options","replacingExistingBot","replaceBotEl","safe","context","s4","floor","substring","makeSessionId","streamSessionId","clientMsgId","client_msg_id","web_search","replaceBotId","botEl","contentEl","no_user_insert","target_bot_id","noUserInsert","typingEl","inlineTypingEl","botAppended","add","scrollIfNeeded","clientHeight","ensureBotAppended","full","pending","typeTimer","sawDone","typeInterval","finalized","finalizeNow","holder","ensureActions","bar","parentElement","requestAnimationFrame","actionsAdded","reply_to_client_msg_id","container","removeIfExtra","node","rid","dataset","nextElementSibling","cur","p","previousElementSibling","finishIfComplete","typeTick","ch","enqueueDelta","controller","AbortController","resp","signal","reader","getReader","decoder","TextDecoder","buffer","gotAnyChunk","watchdog","abort","done","read","idx","decode","stream","indexOf","endsWith","obj","buildMsgActions","startsWith","choices","delta","__","userTs","botFirstTs","msg_id","reply_to","kb_hit","latency_ms","botTs","e2","initChatWidget","openDirect","__DualChatbotWidgetMounted","performance","initAdvisorView","bubbleIconUrl","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","buildAdvisorWidget","uiStart","open","popup","faqHeaderTitle","labelClose","documentElement","widgetOpened","ariaChatLog","footer","position","bottom","background","zIndex","input","inputPlaceholder","placeholder","sendBtn","labelSend","sendIconMask","inputRow","shiftKey","preventDefault","sending","click","ta","fit","height","baseH","h","overflowY","ev","triggerPress","top","right","width","borderRadius","focus","dispatchEvent","Event","target","sendMessage","round","buildFaqWidget","existing","fs","openHandle","setSidebar","sidebar","backdrop","profileUrl","profileLink","rel","label","userName","userAvatar","avatar","src","alt","nameSpan","sbHeader","sbTitle","sidebarToggle","sidebarToggleIcon","sidebarToggleMask","legacy","searchWrapper","searchInput","newChatBtn","list","main","mainChat","mainFooter","mainHeader","advisorHeaderTitle","toggle","lbl","micIcon","labelMicrophone","micMask","recordActions","recordPreview","cancelRecordBtn","acceptRecordBtn","searchToggle","searchEnabled","webSearchEnabled","searchMask","inputWrapper","sendMask","mediaRecorder","prepend","insertBefore","nextSibling","audioChunks","isRecording","recordStartTime","recordTimerInterval","pendingTranscript","discardRecording","timerEl","updateTimer","elapsed","padStart","sec","stopRecordingUI","showRecordActions","hideRecordActions","marginLeft","fontSize","color","stop","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","ondataavailable","push","onstop","getTracks","audioBlob","Blob","disabled","formData","FormData","append","whisperApiUrl","transcript","alert","start","state","safeText","plannedClientMsgId","loadSessions","footerEl","maxH","query","sessions","txt","pe","fe","sess","li","titleSpan","delBtn","renameBtn","renameIcon","openSession","l","removeAttribute","seq","history","seenUser","Set","seenId","lastUserText","lastBotText","lastBotByRid","Map","it","ridKey","get","set","item","cmid","message_content","lastId","has","replyToClientMsgId","innerText","b","parent","seen","mid","pruneEmptyMessages","loadHistory","stopPropagation","currentText","inputEdit","replaceChild","finishRename","newTitle","confirm","detectLanguage","snippet","test","msgRoot","originalText","contentText","stableId","undefined","CSS","escape","allBars","i","initialized","lastElementChild","isLastUser","closest","users","Array","from","_s","filter","u","btnEdit","bubble","old","cancelBtn","saveBtn","mask","replaceWith","restoreView","newBubble","cont","editBtn","doSave","val","next","botId","rem","existingCmid","doCancel","btnCopy","clipboard","writeText","btnRegen","prev","prompt","up","down","react","feedback","reaction","btnDelBot","rowId","btnDel","forId","hasText","bars","_selErr","cm","contentHolder","regex","lastIndex","exec","before","index","lang","toLowerCase","pre","copyBtn","tail","actionsObserver","MutationObserver","mutations","__actionsObserver","observe","childList","subtree","getAttribute","disconnect","__DualChatbotBootBound","visualViewport","footerBtn","__dualClickBound","nodeType","rect","getBoundingClientRect","vw","innerWidth","clientWidth","vh","innerHeight","visibility","opacity","pointerEvents","hasAttribute","cx","cy","topElement","elementFromPoint","isTrulyUsable","__DualChatbotResizeBound","lastSmall","timer","nowSmall","hasContainer","hasIcon","attachGlobalErrorHandlers"],"mappings":"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"}